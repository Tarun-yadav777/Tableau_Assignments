<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook original-version='18.1' source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Health Exp % GDP' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range granularity='1' max='15' min='1' />
      </column>
    </datasource>
    <datasource caption='LexC' inline='true' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='LexC' name='textscan.1len2oq1x10o4419745211tlhpra'>
            <connection class='textscan' directory='C:/Users/tarun/Downloads/Stories' filename='LexC.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1len2oq1x10o4419745211tlhpra' name='LexC.csv' table='[LexC#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
            <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
            <column datatype='real' name='GDP per Capita' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='integer' name='Days to Start Business' ordinal='7' />
            <column datatype='string' name='Ease of Business' ordinal='8' />
            <column datatype='integer' name='Energy Usage' ordinal='9' />
            <column datatype='integer' name='GDP' ordinal='10' />
            <column datatype='real' name='Health Exp % GDP' ordinal='11' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
            <column datatype='string' name='Hours to do Tax' ordinal='13' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
            <column datatype='real' name='Internet Usage' ordinal='15' />
            <column datatype='real' name='Lending Interest' ordinal='16' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
            <column datatype='integer' name='Number of Records' ordinal='20' />
            <column datatype='real' name='Population 0-14' ordinal='21' />
            <column datatype='real' name='Population 15-64' ordinal='22' />
            <column datatype='real' name='Population 65+' ordinal='23' />
            <column datatype='integer' name='Population Total' ordinal='24' />
            <column datatype='real' name='Population Urban' ordinal='25' />
            <column datatype='string' name='Region' ordinal='26' />
            <column datatype='integer' name='Tourism Inbound' ordinal='27' />
            <column datatype='integer' name='Tourism Outbound' ordinal='28' />
            <column datatype='date' name='Year' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1len2oq1x10o4419745211tlhpra' name='LexC.csv' table='[LexC#csv]' type='table'>
          <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='string' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
            <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
            <column datatype='real' name='GDP per Capita' ordinal='5' />
            <column datatype='string' name='Country' ordinal='6' />
            <column datatype='integer' name='Days to Start Business' ordinal='7' />
            <column datatype='string' name='Ease of Business' ordinal='8' />
            <column datatype='integer' name='Energy Usage' ordinal='9' />
            <column datatype='integer' name='GDP' ordinal='10' />
            <column datatype='real' name='Health Exp % GDP' ordinal='11' />
            <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
            <column datatype='string' name='Hours to do Tax' ordinal='13' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
            <column datatype='real' name='Internet Usage' ordinal='15' />
            <column datatype='real' name='Lending Interest' ordinal='16' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
            <column datatype='integer' name='Number of Records' ordinal='20' />
            <column datatype='real' name='Population 0-14' ordinal='21' />
            <column datatype='real' name='Population 15-64' ordinal='22' />
            <column datatype='real' name='Population 65+' ordinal='23' />
            <column datatype='integer' name='Population Total' ordinal='24' />
            <column datatype='real' name='Population Urban' ordinal='25' />
            <column datatype='string' name='Region' ordinal='26' />
            <column datatype='integer' name='Tourism Inbound' ordinal='27' />
            <column datatype='integer' name='Tourism Outbound' ordinal='28' />
            <column datatype='date' name='Year' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;&#9;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birth Rate Classificaton</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birth Rate Classificaton]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Birth Rate Classificaton</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Above Health Exp Threshold?</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Above Health Exp Threshold?]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Above Health Exp Threshold?</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP per Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP per Capita]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>GDP per Capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[LexC.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Business Tax Rate]' role='dimension' type='nominal' />
      <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
      </column>
      <column caption='Years' datatype='integer' name='[Calculation_363102723856404482]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='YEAR([Year])' />
      </column>
      <column caption='GDP/Population' datatype='integer' name='[Calculation_363102723858030595]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DIV([GDP],[Population Total])' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
      <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
      <column datatype='string' name='[Hours to do Tax]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='LexC.csv' datatype='table' name='[__tableau_internal_object_id__].[LexC.csv_5E68AE3523824935BC2A08028A0287E6]' role='measure' type='quantitative' />
      <column-instance column='[Business Tax Rate]' derivation='None' name='[none:Business Tax Rate:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_363102723843178496]' derivation='None' name='[none:Calculation_363102723843178496:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_363102723858030595]' derivation='Sum' name='[sum:Calculation_363102723858030595:qk]' pivot='key' type='quantitative' />
      <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Birth Rate Segment,Country)' hidden='true' name='[Action (Birth Rate Segment,Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_363102723843178496]' />
          <groupfilter function='level-members' level='[Country]' />
        </groupfilter>
      </group>
      <group caption='Action (Business Tax Rate,Hours to do Tax)' hidden='true' name='[Action (Business Tax Rate,Hours to do Tax)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Business Tax Rate]' />
          <groupfilter function='level-members' level='[Hours to do Tax]' />
        </groupfilter>
      </group>
      <group caption='Action (Country,Ease of Business)' hidden='true' name='[Action (Country,Ease of Business)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country]' />
          <groupfilter function='level-members' level='[Ease of Business]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,YEAR(Year))' hidden='true' name='[Action (Region,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[yr:Year:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/tarun/Documents/My Tableau Repository/Datasources/LexC.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='01/25/2021 07:57:07 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='LexC' increment-value='%null%' refresh-type='create' rows-inserted='2704' timestamp-start='2021-01-25 07:57:07.820' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Birth Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Birth Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birth Rate</remote-alias>
              <ordinal>0</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Business Tax Rate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Business Tax Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Business Tax Rate</remote-alias>
              <ordinal>1</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>399</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CO2 Emissions</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CO2 Emissions]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CO2 Emissions</remote-alias>
              <ordinal>2</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1262</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birth Rate Classificaton</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Birth Rate Classificaton]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birth Rate Classificaton</remote-alias>
              <ordinal>3</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Above Health Exp Threshold?</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Above Health Exp Threshold?]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Above Health Exp Threshold?</remote-alias>
              <ordinal>4</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP per Capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[GDP per Capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP per Capita</remote-alias>
              <ordinal>5</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2532</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>6</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>211</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Days to Start Business</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Days to Start Business]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Days to Start Business</remote-alias>
              <ordinal>7</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>125</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ease of Business</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ease of Business]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ease of Business</remote-alias>
              <ordinal>8</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>321</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Energy Usage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Energy Usage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Energy Usage</remote-alias>
              <ordinal>9</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1504</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP</remote-alias>
              <ordinal>10</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2532</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health Exp % GDP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Health Exp % GDP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health Exp % GDP</remote-alias>
              <ordinal>11</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>132</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Health Exp/Capita</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Health Exp/Capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Health Exp/Capita</remote-alias>
              <ordinal>12</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>829</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hours to do Tax</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Hours to do Tax]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hours to do Tax</remote-alias>
              <ordinal>13</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>242</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infant Mortality Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Infant Mortality Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infant Mortality Rate</remote-alias>
              <ordinal>14</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Internet Usage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Internet Usage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Internet Usage</remote-alias>
              <ordinal>15</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lending Interest</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lending Interest]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lending Interest</remote-alias>
              <ordinal>16</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>306</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy Female</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Life Expectancy Female]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy Female</remote-alias>
              <ordinal>17</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Life Expectancy Male</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Life Expectancy Male]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Life Expectancy Male</remote-alias>
              <ordinal>18</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mobile Phone Usage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mobile Phone Usage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mobile Phone Usage</remote-alias>
              <ordinal>19</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>968</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>20</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population 0-14</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population 0-14]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population 0-14</remote-alias>
              <ordinal>21</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>380</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population 15-64</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population 15-64]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population 15-64</remote-alias>
              <ordinal>22</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>293</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population 65+</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population 65+]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population 65+</remote-alias>
              <ordinal>23</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population Total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Total</remote-alias>
              <ordinal>24</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2641</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population Urban</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Population Urban]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population Urban</remote-alias>
              <ordinal>25</ordinal>
              <family>LexC.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>779</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>26</ordinal>
              <family>LexC.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourism Inbound</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tourism Inbound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tourism Inbound</remote-alias>
              <ordinal>27</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1207</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tourism Outbound</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Tourism Outbound]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tourism Outbound</remote-alias>
              <ordinal>28</ordinal>
              <family>LexC.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1011</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>29</ordinal>
              <family>LexC.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[LexC.csv_5E68AE3523824935BC2A08028A0287E6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Business Tax Rate:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;0.084&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.15&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.174&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.224&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.263&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.292&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.326&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.349&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.375&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.399&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.425&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.44&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.448&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.473&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.497&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.524&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.555&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.599&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.647&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.713&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;0.837&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1.078&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.149&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.215&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.253&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.281&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.316&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.34&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.341&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.365&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.391&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.415&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.439&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.464&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.487&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.512&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.541&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.582&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.629&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.66&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.672&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.769&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;0.966&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2.352&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.219&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.258&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.287&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.322&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.345&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.369&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.39&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.395&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.421&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.444&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.468&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.493&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.517&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.546&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.594&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.6&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.636&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.682&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.76&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.805&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.997&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2.881&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.124&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.198&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.23&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.238&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.268&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.303&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.331&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.354&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.381&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.405&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.429&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.453&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.477&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.49&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.502&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.528&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.565&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.606&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.653&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.732&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;0.858&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1.208&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.093&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.16&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.189&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.228&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.264&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.296&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.327&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.351&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.376&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.401&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.426&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.449&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.45&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.474&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.498&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.525&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.556&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.603&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.648&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.719&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;0.838&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1.121&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.168&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.221&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.259&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.288&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.323&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.346&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.371&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.396&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.41&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.422&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.445&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.469&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.494&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.519&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.552&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.595&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.637&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.684&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.8&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.807&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.84&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1.075&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2.921&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.146&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.209&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.248&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.278&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.312&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.32&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.338&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.363&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.387&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.412&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.436&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.461&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.484&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.508&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.537&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.573&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.59&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.624&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.666&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.764&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;0.948&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2.038&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.151&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.2&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.216&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.254&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.282&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.317&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.342&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.35&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.366&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.392&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.416&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.441&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.465&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.488&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.514&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.542&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.586&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.631&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.674&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.69&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.799&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.967&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2.797&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.144&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.204&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.245&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.276&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.29&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.309&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.335&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.359&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.385&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.409&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.434&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.458&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.482&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.506&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.534&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.55&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.571&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.621&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.663&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.757&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;0.912&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2.72&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.082&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.11&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.171&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.222&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.261&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.289&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.324&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.347&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.372&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.397&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.42&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.423&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.446&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.471&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.495&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.521&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.553&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.596&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.638&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.685&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;0.812&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1.076&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2.927&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.135&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.199&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.241&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.26&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.271&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.304&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.332&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.355&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.382&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.406&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.431&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.454&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.478&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.503&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.51&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.529&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.566&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.614&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.656&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.738&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;0.879&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1.373&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.141&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.202&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.242&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.27&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.272&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.306&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.333&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.357&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.383&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.407&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.432&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.455&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.479&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.504&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.52&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.531&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.567&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.617&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.657&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.742&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;0.898&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1.545&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.145&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.206&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.246&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.277&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.31&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.311&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.337&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.361&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.386&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.411&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.435&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.459&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.483&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.507&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.536&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.57&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.572&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.623&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.664&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.758&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;0.947&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2.86&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.147&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.214&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.251&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.279&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.315&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.33&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.339&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.364&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.388&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.414&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.438&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.462&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.486&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.511&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.539&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.576&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.628&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.65&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.669&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.768&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;0.956&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2.179&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.107&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.17&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.195&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.232&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.265&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.298&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.328&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.352&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.377&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.402&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.427&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.451&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.47&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.475&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.499&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.526&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.557&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.604&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.649&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.725&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;0.842&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1.129&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.083&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.12&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.173&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.223&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.262&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.291&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.325&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.348&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.374&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.398&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.424&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.43&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.447&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.472&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.496&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.523&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.554&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.598&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.645&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.703&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;0.834&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1.077&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;3.391&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.153&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.217&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.255&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.283&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.3&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.318&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.343&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.36&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.367&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.393&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.418&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.442&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.466&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.489&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.515&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.543&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.587&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.632&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.677&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.72&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.801&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.975&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2.832&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.143&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.203&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.243&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.275&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.28&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.308&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.334&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.358&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.384&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.408&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.433&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.456&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.481&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.505&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.532&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.54&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.568&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.619&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.659&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.754&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;0.903&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1.952&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.113&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.196&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.22&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.237&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.266&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.302&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.329&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.353&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.378&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.404&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.428&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.452&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.476&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.48&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.501&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.527&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.558&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.605&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.651&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.727&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;0.845&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1.175&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.154&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.218&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.257&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.286&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.319&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.344&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.368&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.37&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.394&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.4&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.419&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.443&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.467&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.491&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.516&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.545&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.593&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.635&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.681&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.74&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.803&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.985&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2.865&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_363102723843178496:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Below&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Moderate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Above&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp \% GDP:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Calculation_363102723858030595:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp/Capita:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='LexC.csv' id='LexC.csv_5E68AE3523824935BC2A08028A0287E6'>
            <properties context=''>
              <relation connection='textscan.1len2oq1x10o4419745211tlhpra' name='LexC.csv' table='[LexC#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                  <column datatype='real' name='Birth Rate' ordinal='0' />
                  <column datatype='string' name='Business Tax Rate' ordinal='1' />
                  <column datatype='integer' name='CO2 Emissions' ordinal='2' />
                  <column datatype='string' name='Birth Rate Classificaton' ordinal='3' />
                  <column datatype='string' name='Above Health Exp Threshold?' ordinal='4' />
                  <column datatype='real' name='GDP per Capita' ordinal='5' />
                  <column datatype='string' name='Country' ordinal='6' />
                  <column datatype='integer' name='Days to Start Business' ordinal='7' />
                  <column datatype='string' name='Ease of Business' ordinal='8' />
                  <column datatype='integer' name='Energy Usage' ordinal='9' />
                  <column datatype='integer' name='GDP' ordinal='10' />
                  <column datatype='real' name='Health Exp % GDP' ordinal='11' />
                  <column datatype='integer' name='Health Exp/Capita' ordinal='12' />
                  <column datatype='string' name='Hours to do Tax' ordinal='13' />
                  <column datatype='real' name='Infant Mortality Rate' ordinal='14' />
                  <column datatype='real' name='Internet Usage' ordinal='15' />
                  <column datatype='real' name='Lending Interest' ordinal='16' />
                  <column datatype='integer' name='Life Expectancy Female' ordinal='17' />
                  <column datatype='integer' name='Life Expectancy Male' ordinal='18' />
                  <column datatype='real' name='Mobile Phone Usage' ordinal='19' />
                  <column datatype='integer' name='Number of Records' ordinal='20' />
                  <column datatype='real' name='Population 0-14' ordinal='21' />
                  <column datatype='real' name='Population 15-64' ordinal='22' />
                  <column datatype='real' name='Population 65+' ordinal='23' />
                  <column datatype='integer' name='Population Total' ordinal='24' />
                  <column datatype='real' name='Population Urban' ordinal='25' />
                  <column datatype='string' name='Region' ordinal='26' />
                  <column datatype='integer' name='Tourism Inbound' ordinal='27' />
                  <column datatype='integer' name='Tourism Outbound' ordinal='28' />
                  <column datatype='date' name='Year' ordinal='29' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Tree Map of Tourism Inbound &amp; Outbound' />
      </command>
    </action>
    <action caption='Filter2' name='[Action2]'>
      <source datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Tourism Inbound in Years by Region' />
      </command>
    </action>
    <action caption='Filter3' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='World Map by Population and Birth Rate Segment' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter4' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7' type='datasource' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='GDP per Capita by ease of Business in Countries' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Birth Rate Classificaton]' role='dimension' type='nominal' />
            <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Health Exp/Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_363102723843178496]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Ease of Business]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp % GDP:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp % GDP:qk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp % GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp/Capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</rows>
        <cols>([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp % GDP:qk] + [federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Health Exp/Capita:qk])</cols>
      </table>
      <simple-id uuid='{CA40BA71-2EE9-4D69-B6DC-28739EE0E8BF}' />
    </worksheet>
    <worksheet name='GDP  &amp; GDP/Population by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Birth Rate Classificaton]' role='dimension' type='nominal' />
            <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
            </column>
            <column caption='GDP/Population' datatype='integer' name='[Calculation_363102723858030595]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DIV([GDP],[Population Total])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population Total]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_363102723858030595]' derivation='Sum' name='[sum:Calculation_363102723858030595:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Calculation_363102723858030595:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_363102723843178496]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Ease of Business]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Calculation_363102723858030595:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Calculation_363102723858030595:qk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP:qk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</rows>
        <cols>([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names] * [federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Multiple Values])</cols>
      </table>
      <simple-id uuid='{513A9C2D-ABC6-48E5-B5F7-8EDC085F04C3}' />
    </worksheet>
    <worksheet name='GDP per Capita by ease of Business in Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='real' name='[GDP per Capita]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ease of Business]' derivation='None' name='[none:Ease of Business:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP per Capita]' derivation='Sum' name='[sum:GDP per Capita:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Ease of Business:nk]' />
              <groupfilter function='member' level='[none:Ease of Business:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP per Capita:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP per Capita:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk] / [federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk])</rows>
        <cols>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP per Capita:qk]</cols>
      </table>
      <simple-id uuid='{96D223AA-EE55-4DE5-8243-1B332A537312}' />
    </worksheet>
    <worksheet name='Mobile &amp; Internet Usage over time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Birth Rate Classificaton]' role='dimension' type='nominal' />
            <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='real' name='[Internet Usage]' role='measure' type='quantitative' />
            <column datatype='real' name='[Mobile Phone Usage]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Internet Usage]' derivation='Sum' name='[sum:Internet Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Mobile Phone Usage]' derivation='Sum' name='[sum:Mobile Phone Usage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_363102723843178496]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Ease of Business]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Internet Usage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Internet Usage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Mobile Phone Usage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Mobile Phone Usage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Internet Usage:qk] + [federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Mobile Phone Usage:qk])</rows>
        <cols>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{EFFE2FFF-65F4-44EC-9A4B-8B29D73610F8}' />
    </worksheet>
    <worksheet name='Tax Rate, Ease Of Busines, Hours To do Tax by countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Business Tax Rate]' role='dimension' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Days to Start Business]' role='measure' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='string' name='[Hours to do Tax]' role='dimension' type='nominal' />
            <column-instance column='[Business Tax Rate]' derivation='None' name='[none:Business Tax Rate:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ease of Business]' derivation='None' name='[none:Ease of Business:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hours to do Tax]' derivation='None' name='[none:Hours to do Tax:nk]' pivot='key' type='nominal' />
            <column-instance column='[Days to Start Business]' derivation='Sum' name='[sum:Days to Start Business:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Ease of Business]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Business Tax Rate:nk]'>
            <groupfilter from='&quot;0.082&quot;' function='range' level='[none:Business Tax Rate:nk]' to='&quot;3.391&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]'>
            <groupfilter function='level-members' level='[none:Ease of Business:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Business Tax Rate:nk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Hours to do Tax:nk]' value='140' />
            <format attr='width' field='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]' value='156' />
            <format attr='width' field='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Business Tax Rate:nk]' value='144' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Days to Start Business:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk] / ([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Business Tax Rate:nk] / ([federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk] / [federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Hours to do Tax:nk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{0949D55B-93AD-47E8-AC98-A06FFF877DCE}' />
    </worksheet>
    <worksheet name='Tourism Inbound in Years by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Tourism Inbound]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism Inbound]' derivation='Sum' name='[sum:Tourism Inbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Inbound:qk]</rows>
        <cols>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{61F46BD8-DC99-4147-B49D-360F6203AFFF}' />
    </worksheet>
    <worksheet name='Tree Map of Tourism Inbound &amp; Outbound'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Birth Rate Classificaton]' role='dimension' type='nominal' />
            <column datatype='string' name='[Business Tax Rate]' role='dimension' type='nominal' />
            <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[Ease of Business]' role='dimension' type='nominal' />
            <column datatype='string' name='[Hours to do Tax]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Tourism Outbound]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism Outbound]' derivation='Sum' name='[sum:Tourism Outbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_363102723843178496]' />
              <groupfilter function='level-members' level='[Country]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Business Tax Rate,Hours to do Tax)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Business Tax Rate]' />
              <groupfilter function='level-members' level='[Hours to do Tax]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Country]' />
              <groupfilter function='level-members' level='[Ease of Business]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Region,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Region]' />
              <groupfilter function='level-members' level='[yr:Year:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Outbound:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Outbound:qk]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Region,YEAR(Year))]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Business Tax Rate,Hours to do Tax)]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]</column>
            <column>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Outbound:qk]' />
              <color column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Outbound:qk]' />
              <text column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]' />
              <text column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DE531088-E650-4825-89C7-079472927CE1}' />
    </worksheet>
    <worksheet name='World Map by Population and Birth Rate Segment'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='LexC' name='federated.1utzkmt0fj2dmc19v01w60r4mgq7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1utzkmt0fj2dmc19v01w60r4mgq7'>
            <column datatype='string' name='[Birth Rate Classificaton]' role='dimension' type='nominal' />
            <column caption='Birth Rate Segment' datatype='string' name='[Calculation_363102723843178496]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Birth Rate Classificaton] &#13;&#10;WHEN  &apos;Below 1.5%&apos;&#13;&#10;THEN &apos;Below&apos;&#13;&#10;WHEN  &apos;1.5-3%&apos;&#13;&#10;THEN &apos;Moderate&apos;&#13;&#10;WHEN  &apos;Above 3%&apos;&#13;&#10;THEN &apos;Above&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Population Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_363102723843178496]' derivation='None' name='[none:Calculation_363102723843178496:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population Total]' derivation='Sum' name='[sum:Population Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#b4b4b4' />
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]' />
              <lod column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]' />
              <size column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Population Total:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.9944751262664795' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Latitude (generated)]</rows>
        <cols>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9FC0BC35-0CEE-436D-AA3E-4B3DA402BAB5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Health Exp % GDP' datatype='integer' datatype-customized='true' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
          <calculation class='tableau' formula='1' />
          <range granularity='1' max='15' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='13' param='horz' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='8' param='vert' w='99034' x='483' y='929'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6155' id='10' w='99034' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='91987' id='5' param='vert' w='99034' x='483' y='7084'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91987' id='6' w='99034' x='483' y='7084'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91987' id='9' w='99034' x='483' y='7084'>
                    <zone h='45994' id='11' name='World Map by Population and Birth Rate Segment' w='49517' x='50000' y='7084'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45993' id='16' name='Bar Chart' w='49517' x='483' y='53078'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45993' id='18' name='Mobile &amp; Internet Usage over time' w='49517' x='50000' y='53078'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45994' id='19' name='GDP  &amp; GDP/Population by Country' w='49517' x='483' y='7084'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9872' id='15' name='World Map by Population and Birth Rate Segment' pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]' w='8449' x='80447' y='12544' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='8246' id='17' mode='slider' param='[Parameters].[Parameter 1]' w='9656' x='38503' y='57840' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='21' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='20' param='vert' w='99034' x='483' y='929'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6155' id='10' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45994' id='19' is-fixed='true' name='GDP  &amp; GDP/Population by Country' w='49517' x='483' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45994' id='11' is-fixed='true' name='World Map by Population and Birth Rate Segment' w='49517' x='50000' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9872' id='15' name='World Map by Population and Birth Rate Segment' pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]' w='8449' x='80447' y='12544'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45993' id='16' is-fixed='true' name='Bar Chart' w='49517' x='483' y='53078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45993' id='18' is-fixed='true' name='Mobile &amp; Internet Usage over time' w='49517' x='50000' y='53078'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='8246' id='17' mode='slider' param='[Parameters].[Parameter 1]' w='9656' x='38503' y='57840'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4296FE2E-089B-4911-8075-F7A1CFD8D6BC}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='10' param='horz' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='5' param='vert' w='99034' x='483' y='929'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6155' id='7' w='99034' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='91987' id='6' w='99034' x='483' y='7084'>
                <zone h='91987' id='8' name='Tourism Inbound in Years by Region' w='49517' x='483' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='91987' id='12' name='Tree Map of Tourism Inbound &amp; Outbound' w='49517' x='50000' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='17189' id='11' name='Tourism Inbound in Years by Region' pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]' w='8449' x='7423' y='15912' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontsize='20'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='13' param='vert' w='99034' x='483' y='929'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6155' id='7' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91987' id='8' is-fixed='true' name='Tourism Inbound in Years by Region' w='49517' x='483' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='17189' id='11' name='Tourism Inbound in Years by Region' pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]' w='8449' x='7423' y='15912'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='91987' id='12' is-fixed='true' name='Tree Map of Tourism Inbound &amp; Outbound' w='49517' x='50000' y='7084'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1BEF1C10-700B-4298-9452-6161199773C9}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='5' param='vert' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5807' id='7' w='99034' x='483' y='929'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='92335' id='6' w='99034' x='483' y='6736'>
              <zone h='92335' id='8' name='GDP per Capita by ease of Business in Countries' w='49517' x='483' y='6736'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='92335' id='9' name='Tax Rate, Ease Of Busines, Hours To do Tax by countries' w='49517' x='50000' y='6736'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='11' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='10' param='vert' w='99034' x='483' y='929'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='5807' id='7' w='99034' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92335' id='8' is-fixed='true' name='GDP per Capita by ease of Business in Countries' w='49517' x='483' y='6736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='92335' id='9' is-fixed='true' name='Tax Rate, Ease Of Busines, Hours To do Tax by countries' w='49517' x='50000' y='6736'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7D621470-CBAC-4381-9F5D-417844BB14E9}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='687' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='81533' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='17538'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Chine with Heighest Birth rate can we seen in Map, then the GDP &amp; GDP/Population of china, Health Exp % GDP &amp; Health Exp/Capita of china and Mobile &amp; internet usage in china.' captured-sheet='Dashboard 1' id='1'>
                    <currentDeltas>
                      <worksheet name='Bar Chart'>
                        <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_363102723843178496]' member='&quot;Below&quot;' />
                            <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='GDP  &amp; GDP/Population by Country'>
                        <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_363102723843178496]' member='&quot;Below&quot;' />
                            <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Mobile &amp; Internet Usage over time'>
                        <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Birth Rate Segment,Country)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Calculation_363102723843178496]' member='&quot;Below&quot;' />
                            <groupfilter function='member' level='[Country]' member='&quot;China&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='World Map by Population and Birth Rate Segment'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Population Total:qk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Latitude (generated)]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Below&quot;</value>
                                <value>&quot;China&quot;</value>
                                <value>17020440000</value>
                                <value>35.1753</value>
                                <value>99.3877</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7C6E9315-E2AB-4AC0-B844-15798C5FA8AD}' />
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='background-color' value='#fffef5' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='546' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='110' h='12776' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='80488' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='18583'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Tourism Inbound of Year 2012 of Europe and Tree Map showing  the Tourism Outbound for various Country in Europe.' captured-sheet='Dashboard 2' id='1'>
                    <currentDeltas>
                      <worksheet name='Tourism Inbound in Years by Region'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Inbound:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Inbound:qk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Europe&quot;</value>
                                <value>528912000000</value>
                                <value>2012</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Tree Map of Tourism Inbound &amp; Outbound'>
                        <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Region,YEAR(Year))]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Region]' member='&quot;Europe&quot;' />
                            <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{C52C59B6-15FF-46A1-A451-65E2D6E6AE81}' />
    </dashboard>
    <dashboard name='Story 3' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f5f5f5' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='514' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='text-align' value='center' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='3' />
          <format attr='border-color' value='#b4b4b4' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98142' id='1' param='vert' removable='false' w='99034' x='483' y='929'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4878' id='3' w='99034' x='483' y='929' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='11731' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99034' x='483' y='5807' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='81533' id='5' paired-zone-id='4' removable='false' w='99034' x='483' y='17538'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='GDP per Capita by ease of Business in Singapore with Business Tax Rate, Ease Of Business rank and Hours to do tax in Singapore.' captured-sheet='Dashboard 3' id='1'>
                    <currentDeltas>
                      <worksheet name='GDP per Capita by ease of Business in Countries'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP per Capita:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]</field>
                                    <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]</field>
                                  <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:GDP per Capita:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Singapore&quot;</value>
                                <value>&quot;1&quot;</value>
                                <value>54007.228371357996</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Tax Rate, Ease Of Busines, Hours To do Tax by countries'>
                        <filter class='categorical' column='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[Action (Country,Ease of Business)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[Country]' member='&quot;Singapore&quot;' />
                            <groupfilter function='member' level='[Ease of Business]' member='&quot;1&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{CD728C9C-02A5-4913-9B13-E8F4432D97EA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='World Map by Population and Birth Rate Segment'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Population Total:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Population Total:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A84BFB43-9884-4706-B860-AAF581696661}' />
    </window>
    <window class='worksheet' name='Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Calculation_363102723843178496:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B4B38E5-81F3-4B5E-9D63-069643BD3760}' />
    </window>
    <window class='worksheet' name='Mobile &amp; Internet Usage over time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AD76808-9F1C-4505-A995-79890BEAEB7A}' />
    </window>
    <window class='worksheet' name='GDP  &amp; GDP/Population by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{82A44444-39A1-4EAA-B21E-37F8B5F0AA3C}' />
    </window>
    <window class='worksheet' name='Tourism Inbound in Years by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9B14131F-4F3F-466A-B33C-87E759B220A2}' />
    </window>
    <window class='worksheet' name='Tree Map of Tourism Inbound &amp; Outbound'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Tourism Outbound:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0DCFE55-698A-4BDF-9B01-75CEF5DCA41B}' />
    </window>
    <window class='worksheet' name='GDP per Capita by ease of Business in Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D22B15E9-7E32-492D-8F65-10D1EA71D907}' />
    </window>
    <window class='worksheet' name='Tax Rate, Ease Of Busines, Hours To do Tax by countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Business Tax Rate:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Country:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Ease of Business:nk]</field>
            <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Hours to do Tax:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F56F1903-971F-40BE-91A5-A3365F18DA44}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Bar Chart' />
        <viewpoint name='GDP  &amp; GDP/Population by Country' />
        <viewpoint name='Mobile &amp; Internet Usage over time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='World Map by Population and Birth Rate Segment'>
          <zoom type='entire-view' />
          <highlight field='[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[sum:Population Total:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{B003DF4C-973A-4A52-8A30-04C64B077B80}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Tourism Inbound in Years by Region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1utzkmt0fj2dmc19v01w60r4mgq7].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Tree Map of Tourism Inbound &amp; Outbound'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='7' />
      <simple-id uuid='{9300319A-7B42-45B9-BE9B-158924819CCB}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='GDP per Capita by ease of Business in Countries' />
        <viewpoint name='Tax Rate, Ease Of Busines, Hours To do Tax by countries' />
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{1655BF81-10F4-429C-AEDB-8F092B1A1671}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{210E2051-B1CD-4DD1-9E20-A575266F47E3}' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{AF052F49-1B7C-48DE-A687-8E09DD027C8A}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 3'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{3CAB0C41-425F-4488-BCAC-FAC75356B990}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WZAceX7f98mzsqqy7rv6BjAYAIOZnZnl7M5yuUuKpGSakintg22asuww
      ZcmS5dt+kGMVYYefbVm2bDkUcjgUVuhBohR2hC1pl+RaIrlc7s7OXpqZHQANoO+676rMyqq8
      /NAAZjDdaHR1dTeOzs/LDKrzn79/Hf/M/zd/l2AYhk9AwAVFfNYTCAh4lsgP/8f3gxtBwMVD
      /vQ/vv3tb5NIJJ7VXAICzp3HFkAikeDdd999VnMJCDh35KcfEhDw4uL7/qPtvSAICILw2N+D
      BRDwUuPbY/7aX/s6a69cxzQMfunXfp2bl0qP/h4sgICXniuvv8Nv/rnfwHMm/O3//f/ktb/0
      5/nm//0P2ar3gwUQcHEQ5RDFiIbhC/zCH/9VPr69HvgBAi4Ovu/Rm0xRpkP+zt/5u9hesAUK
      uAC0aru8973vsv7TD1i6+QVEz8UXRKZGH+FhKITv+3zwwQfBY9CAlwrfc7n10w+ZOLC0dplM
      Qgeg16pR65qP3wFs26bVaj2TiQYEnBW54gIAvm3RalkPXpXJpuKPL4BMJkOj0Tjv+QUEPDOE
      IBo04CLzWDDcxsbGs5xLQMC589gWqNfrcePGjWc1l4CAc+exBSDLMul0+lnNJSDg3HlpHWG+
      a/OTH/6AH3/wMd1Ghe9+7z3WN3dp1bb53nvf5+7m3tPP4Xt88KP3uX1/+9C/d7tdhsMBn02l
      uLW+fhpvAfB4/4/+kN7IorJ5l++//z53tw6Zt+/S7Q2OfdZut/uZ8T73bn/ETz64hXfkSJfh
      wHj0L3MwwHLcY9t9HnlpHWGb6x9SvnKTZESiurHOlRtvUFn/gLEa4pVrr7F+60OurC7wB7/3
      LTwxzJXVEruVGqXlS9z6wfd5492v4Hd3Sa3eYDEVYeveLe7ttblUSFEbGsTiOVTBYv3jD1i7
      /g5RacL6dpM/9gs/x6jX5ofvd4kmMziOgMSUV6+9yu0Pfkyrb/H669e4c/s2sUyB1u4Wi1eu
      YTT36JkuX/zSF9i7+zG1do9MPsu9jSpXXodmrYErq/QHA+7cMVnI6ew1htRaHW68do1urcut
      j36E68Gly5fZ2t4llytQq+yyuHaF1s5d9NwS166s0mrVae9s0Z6MSRcus5qGoRfhzdfX2Lz7
      MfVmh1K5jKMmcEYtzGGPqWURz+f4yXt3+PKXXuPjzT3WFhdIJOP86N59EukCo9Y2ieIar15a
      ftZf/7F5ae8AgiAwtQy+9Y1vMvHAB3x8BM/m9p073Lj5OQDCiQzLSZ0PP14HUWFiDUkXlihm
      EwiCgOt5+L5Pq9Wm0WphmFNef/NtrEEbwzAoL63x6pUVWq023XqTKSAoGm+9/XlG/QFGr45t
      Owj4bNzfRBam7FaaANRaXWKxCO12k/sb2wjeBMuB9mDMz7z1On1jwquvXiOpa0ihCG+99Sa2
      MWI0MrAnYzwpjCb5dDpdDGOMGk1weSHN7Z/exRYkJrZNLBqm3e4ST8RpdzoAGIaBbcPn3rzJ
      qD8EBLwH77MzMHnn8zepbu5gjKcMR0NcUeXN62s4coSrV68RkVwu3XgTxZtS2dliNPGYTCzi
      8QSddocX6bGi9PWvf/2/ffiPRqPB4uLiM5zO6ZFIZ9hcv000nWMhn+bu+jqZ0gq5dJKV1TUi
      IQWAn/zwPdRknjdvXKbV6VEolYnrOroeRU9l2Fv/iN7YRcEhFEkQFlw2KxXWLl9Dj4TIJeNs
      VNpokocSibG4WEb1bW7fWefStZs4/SqZ1ZvomoIWkpm6IsVcmqFpUcxnmRpjktkChUwMR1Ap
      FwvoIfjo9gbXrt8gpMjosSiebbJ+b4N8aRFd9dmt98imUxiGQb60QCwSRo9HicV08uUFht0O
      2VweyxySyGRxrDFaNE4uk0IQBHQ9TkSPIokyiVQGq19jp9pluZzlo9tbvPbWm9S37yKFopQK
      eWK6jqToWMMK4USOeDyOpspky2WMXodUNoczHhGOp8ilk8/42z8+Fz4UYmQY6NHosY8fGwZq
      JIL0mcSKw/B9n1qtRqlUeuqxAc+GxxbAd77zHXRdf9ZzCgg4Nx7zBEcikWc5l4CAc+elFcEB
      AcchWAABF5pgAQRcaIIFEHCheSwadDgcPsu5nCufrhUzy5hZjj/JmPOyAWf73l8UG48WgCAI
      xGIxADzPQxRP5+bg+z6O4yBJMuCf2nnnxTRN/vEf3MGbwW3peT6iONuPc9Yx52HjYezSp383
      8UiIr331+hPHOI6DLB8/csZ1XURRnOnHOasN3/fxPA9Jkk5s44A1dzrmD977Eb/wcz977JMe
      RaeySWXosFDI4fk+7sREDOlookNrYJFPRWj1LXJJnUa7y+LiApWdbfKlMsZwgKqF6XR6LC0t
      IM54ZXwa/88f3mHiHB3+dVEoZfQjF8DLyoEFIKlhyoXsqRlI5oo0encZDYdMXRvHEVDHbXqO
      i4tPvzelurWNkV1ioRjjg5/8iIVL19i+ewuDCGEqmJZNNJkhGw+f2rwCAuAQETwdj+h0OlQb
      7VMxYI3HCJKMJMtEwhFSyQR6VEfCodHq4joeEV1H8Gx2Kk2WVlZo7G4RS+colwpkMxnC0QR6
      WDmV+QQEfJrHQiE87/y2A7W9LSxPYXWpDMCwPyCaiJ/bYynLsthujoBZ9s4egjDbDGcdcz42
      DopHVZZYLT05iM113Zn22p7nHVqM9ihmtXESDfBZGwdCIXzfx7FtJFmZWYwdPkkPHwH8owXw
      wy/Ff9pxnoftuCiKvC/WJQnHnoIgojwUN76PbdtIsvzgS3goFD85r2ma/KPfn1EE+x7ijD/O
      Wcc87fiQKvNv/dLNx16bVTw+vNDN8kDiwohgZ2KyvVfFdiWuXV079omfhNHeoy9mMVs7LJTy
      tIcT0vEIrXaH8sIClZ0tkrkysmfQ7oxxRBldcVGiKZiOMGyBXCLMbq3Fysoq9+98hKjqLK8s
      8v4ffpvXv/gV7nzwIxRV4+prr6PJIo29Lbpjh7iq0ptOWFpcwjIMstnMY3P7f7/z4ongeEQ9
      sAACTs6BS4Csanj2lNLCKYXw+h6b9+/S7AzYqdRQ7D63N6vE9RB3PrxFPJ2h1myD73FnfYNc
      SqM/EWhUd2h0ekzGBjt7NcKyy2jqUSqVMIYDOrU9HFFma6eK60yYuKA8uGMNzClXrlxGDysk
      0lmatV26nf7pvJ+Al4oDC8BoVxnaAhNrcioGpFCUa6++yupSiaim0jZcCtkkkUiEdCbJ3tYm
      jucjKRo/885bdDpDXLOHHNJJJlPoepSwKrFTqSEAY3OMoiiYtsCXvvxzpCIiCytXWMgmaNRr
      WLZLqZDh9se3MB2RWDRKNBohGo0wHA4vlLMv4Ok8MxEMYFsG97d2WVheQw+rTzyu26rR6ltc
      vrTKUbJkOp2iqOqxZK1lWew0RzCLePQ8hJkceT6+58805mk2JFHgUjn12GsnEagwmwa4UCJ4
      Op2iKOrpiGDPw/P3vY5P+sAdx8ZxXFQ19JhN3/fwfeHQeXgPfignnaFpmvzW792eUQT7Mzvj
      Zh0zy/Ffem2JayvZQASfqid4YrJXqTFxRK6fggged3f58Y5FNgorCyXqnRHpZAzftVG0CCAy
      HQ+49fEtLt94g2GvR7mYZWevRj4ZoT+V8aw+6UIZo9NC0HTCksut9W3efuctjv/WD/JP/mj9
      hRPBn6aQ1rm2cnpOy4vIQU9wKIJvj1G01GHHz44gkYoqdEdDrNu3cVyf0SiJ4FvYU4/VV28S
      UmQKS1do797HmDh4nsuw02QyjRONxhmNDDqj24TlBOqkS991KGRPaX4BF5oD98CJMcBGRpHn
      ubZ+gqRolBYWUPDIZjPoyTRLpRRKOIMkq8Q0ie2tbcZGn3AsiRaJoSkSajhMNBJFlQUQZPRo
      lFQ6QVSPIuHSN6wTb38CAh7yTEXws8SyLHZbxuMhkU9hdhE8+5hZjs8lIySiWiCC5xDBh4dD
      u/stZKRTEsG+IIDnI0rio/MLonTgt7f/oYn4novtuKiqMnNs/HGRJImfvL/LLGv+ZJ7gWUXw
      LDY6J5qX/6B0lYDAv/mLrxE94gncQy6MCPZ9n/WP3kNMXuOV5fn32f3GJtPoEv3KJoV8mu7I
      IhEO0elUMcUky5kwpiOSCEvc+uktrr79RbZvfUhIT+KaPRwtQy4q4koau/fvsHT5Gu54gJ7K
      029XSWTLxCKhE83tn77gIvg0+LUvv3qsBfCycmABtCsbtEc2kt+BU1gAIDxKwKg32kRkmaZp
      Eo1FiceL3P7wPQRVZxCLsFDKA1Aul9ncqZCIhckWi3R216l2dsln0iRVl/fX6ySGBp7toEat
      Ey+AgIADCyC7cIl0Lku9fzpxmXoqz+76baLxNFFNQcVHsB10XaVSr5HNZvAVHcWf0OyNiJdh
      YJooioIeS9CsVxFcj1gshh5S6IxdEnqYbCbLaNDFtqenMs+Ai8mFFsF7beOF8wSfxhjf9/ef
      oAkCK4UEsvT0sS+rCD7UE2yNx8hq6FQehfqeizWZEgppM+bGzufpfRqmafIP/sWtICf4EK4t
      Z/ny64+XOL8wItgZ1fjhxy1eu36ZZGz+UolGe49bdYuIIrGUTzCyBaKqQGdgkkvFabQ7yKJA
      Jl+iWd0hUygzMYZ02wPyKyU0RUM9JZ/EZ/ln37174UXwYUxs98ACeFk5cO8TQymWCjFq1frp
      WBAESuUlVMnl9u077O7sUm+00PwpO9Ummuziigq1eo3haMS99XV2al00yeXjOxsoM6zugIBZ
      OXAHsO0J5nhMLJU/HQNKiPrWBoV8DhkfV44Qj4TQJHBVAT0MIUJY4yFjSUGPasTiaRRvymrc
      wZzYRLUgHzjgbLjQIrjSMbmoOcH7W/PD33s8GiKbeHz7+7KK4IOeYN9nOp0gyuqxng48dZIP
      PMH+MSd62iL8SUiSxA/e25lRBM9eMOwwT/BiLs6vfPHKocfPKgRPMiYIhz5CBFuDFj/darC2
      ukoqfvzOKU9i3KtSHYEsq8iuQSxdxJ+OcFEY9DqUFhao7OxQXFohrMp41oAPbm0S1kKsLeTp
      j11imkhnMGb5lItjfeN7z0YEv/1K8YkLIOB8OXAJ6DdbaLEY9VrtVAz4vsfd+9skwz62EKW6
      u832zi5mu0p70Gd7d5fRaMC9zcqjMaN+B0mNcPv2bWp7u9TaXXTFozs8nTTNgICHHFgA2eUV
      3NGAWDxxKgbkUIQvfP5z9IYW436dsJ6gWCqTzuUIKRrxSAhJ0QjLHs1OH0FSuHHzDSKSRyab
      JZnK4E1NGj0TTXSx7Be7L23A88VzI4Jd1wZBPjQCdTAcEI/FT9WeZVlUO+Yz8QRHQjKF9OG9
      2GYVgicZE4RDHyGCXcfGmkyRFZWQOv/jR99zcf395w2zfrEPeRimfZpIksT7723jzhQO/Xzl
      BJ90zNM8wadhw3tQhnyWdzLz++BBIbVjjgkpMr/xy689xRNsT2k3KgymCjdfXT32ZJ7EuLv3
      KCd4qVyg3h5RyibpjgyikSgTa0xECzOdmgwtj1Q8iiqLIGv7/z1DvvG9e4En+AKhh1V+45df
      e+y1AwsgFI7guXD1lZXTsfogJ7gzHMJujWwizN2790ktrVHf26LbHaJnc0Qlj+2dBs5yEdv2
      uHT58unYDwg4ggOXWN8HNaqjnkI2GDwot76wSEjyScTCVDsGhUKedFwnFFJZe+UyiqTg+fsh
      z8VilvHURz4l+wEBR/HciOCH9NoNlGjqzMMfLMui1h2/0DnBJ7bxqXDoM7Ph+QgzXsTO+r1L
      okA5ox8tgn3fZzw2CWmRU8oJdnE8kCUB297P84UnK/5YLHYib+isSJLEe9+bVQR7/IV/7fNI
      x/zAfd/Hdd2Z3kvgCX7GnuBhfZvtgYMsSFx7ZfXYJ34S426Fn+xavJpXuFszWc7rSOEE3VaD
      fCbBcApJPYwqixjmGGPiElYloppCtTVgdWXx1FsjPeSb780ugv/9P/X5M5lLwLPhwAIQZBXb
      GqDFntwsYSYEEUXwaY9dUhGZwWBIZ69NOqnT7/fZ2muxvJhn6kJIhqmnMDYs3IhGq7pNMlsk
      rQfRoAFnw4F7oPTg+b+mnU6iuaSGWV5II8kRdD2Ch0AsHkPXdTzfIx6PUyxksGzQw2Ec2370
      t7Ae4wzj4QICng8R3G3V0WIZwqGz3fd/GsuyqPfGM3uCV4rJY+9rT8NTeRZjAk/w00SwaaJF
      Iqe09/aZWBaI8hM9yw89vechfh8iSRLf/e4W7qfCoX/lC1dYKT5563cSkRaI4BdMBDcr24xs
      D8eVuHp5/rxQo1tnq2mSSSWIKNAfu6SiCq3+mFwqwXBsogouPdMlFgkRViUaXYPV5cWZXPUn
      4be/f/8xEfz21dKRCyDg5ePAAtB1nVa1hW2fznZo2BuSLxbZvr+FPx2AGGEQC5PTFW6td1m7
      ukKr0sDzbToTg1hYpbG3TSpfJhl+PrrKB7y8HPiFqZqG6HssrZxOKER2YZHGzjZ6TCeXy5NM
      p0lGNZqDKeVSnng0iuBZNNt9YnoM3/OJ6AlkcYZUrYCAE/JciODq7hauFGaxdDqJ+MfBsiwa
      fesxb2guESEcevIj12ch0s5iTCCCjyiMBWDbNoqiMLHGiLI6d27udDJBCYWOFRrrue6j2sXS
      KeQkPwnTNPn7v/vTx0Tw05g1J3jWcN2T2DjRvA5plH0aNt64XOBnby4BL7AIdqdjvvP9H/PV
      L32eO7fvIqohXrt+9dgGDs7S44Mffo+Vm18kxPSRDWPqs7d5l7VXruM5ExRVpdc30BUbL5wh
      rMh0mjXyC8tEtbOpXvw7798PwqFPEVWWHi2AF4WDLZLUMKV8Bt+foCcK+O5oLgOTUQfDEdnd
      2Saq7HeND0kirhQilcmR1hU+3uqRi9m069tMU1miGFgjH2M84v7GHq9fn79XWUDAYRy4p03H
      I3rdHvX2BMdqIqrhuQyMTJt3v/xlCikd0fcwLYdwWMO2HSKaTHswplTI4Xs+4WgcXY8RCYcJ
      KSKiFCIWnc9+QMBRPBci+FlgWRbNvjVTQanZNYD/QAOcnY0TzeuMNIAeUUnq2qPjXwQRfGiL
      pOl0iqqquI4N4uGJ6sfFcx18QcL3PvGIuo6NICkHml4/bJ3keS6CAI7jIsvKoZWPT/K05NNI
      ksT/9UebZ5oTfCIRPMPxX/ncCjfX8oEn+LRF8B99/8d89Wff5f6H76GtvMNS6uQidNDcftQi
      KZtN0BtNSUU12u0KpphiORPCsPdbJN2+dYdX3/4irb0dvOkEPZlC1SJ0mw0yxTKDVg0xHEf1
      J9zba3Dj0hLtgUUmEaHe2q8ynSstETlmTNHvvr/xQovglWKSm2vn9+j4ZeRgNOgDESwIAguL
      C6dg4pMWSe3OgJBr02x3Ccd0SqUid+6sU61UqTTaj/wAltGnN3bxJ0O6vS6RRJK9u/fw1BiD
      bo1uf0IulaBSaxJiwtZWjZAMoZBKozufaA+4WBy4VE7HI3q9HtV6k2GjhRUSWUqdPCZITxfY
      W79NNJElGpL3WyQ57n6LpEaNfC6HK0cIMaXZN0mUIZ0vUxJ9esaYaCS675/IZWi2qowdn1Rk
      zHiqkIpqdIYW+XwGRRWQZQXJC3IHAo7PCyOCfc9hc2ODRLZEOnF4UalZsCyL1mBy6kLw0/js
      h1DPMmYWGwldQw+rgSf4tD3B+yJYwRqPQVTQjggPeBqe6zAYjgiHI0iy/KDitP9A4B7cq3ue
      C4gztwmaFdM0+Xu/8xGzSICTlS73Z/oRnHZ59F98e5XrK7nHXgtE8DFFcLvVotUb8bnXbxzb
      wGcxOxW2uz6reQ9XUBh0msTSWdr1Bsm4hiNGCIk2fcOmnE9y584dikuvkkvPX5n6aXzrBy+2
      CD4OV5cyBxZAwCc80RMM4DkTiuXynCZ8hoMBYx2MqYSsRhl0moBPvz+k0auST6cISxIblRrL
      y4vYQSBowDnxZBHcqNNqD0grOnDyJBFZ07l+rURUMBFMDzUUwpkKOLbLqN8jHo+TTCaRAcmd
      sFttsrh8OpWpAwKexgsjgk8by7JoDydn7wn2/DMTwccZk9Q1Ip8pMhaI4GN4ghVFwTSGSEp4
      LhG8Xx1aeKzdku+5eP7h4c7nlRcsSRL/+A83ZhTBswnak4yZ18a//cffIBnTjjw+EMHHFMHD
      wYBac5s3P3fz2AY+y8Ts0ugJCE6fRDZPq9Egk4wysGRcq0s6X2LQaSGHY2iCzccbFb70zlsn
      tjcL/98PN186Efy1r1576gII+IQniuD92u4egjS/Y2k8aBJOF+nsbjKYuni+iyxHMUyT/r17
      RGIp5FGPkeNTzKXnthcQcFwODYfu9/pU6nUGA5NweL6riSSHSOfymN0K4UQaRQmRTqUIhyQE
      USEWj5NMxInpcWTRZTQO+oAFnB8XWgR3htOZKhg/b57gw8bkktGntrcNRPBTRPBkMiEUCuH7
      LpOJizZHSqLvewwHAyJ6/IlfzHkWxHqIJEn8o29v4MzgczhRye9ZRfCJyorPOOaIHkm/+a++
      STR88Pu+UCL4u+//mJ//8rvsbd2nNfJ58+bJc4Lbuxu0bIWc46KFI4zHFiFVYtTvEoplcMc9
      tmsdrq4u0DVs4hGZTnfEyurKqZRnP4p//qOXTwTPy5/95de5SEl4TxTB7mTExm4D25uvMkOq
      tET33l36fZedrS2EkEZUFml0eiSTBooWJ5uMsb5+B0EKM47rZHWVgbVfTTog4Cw51BPc7/Vp
      JDJ85ctfolZvzmXAMka4vkA8kWI6nZLQQ4TjORzXJZHJY3RbWKJKPl/AciXi8SjhkIgvBS2S
      As6eCy2Cu6PpGXuC9zXQi5QTnEtFDu2AcwFFsMpw0AdRJaZHjm3gwCQ9F9cD+VPFtZ6UEwzn
      6wn+rW/ff+k8wZ/l2nKWP/HO4x03A0/wMUTwV7/0BX760UesXX1trgUwMbvUOz6qPCES1Wl3
      +kQlCym5TLexR7lcolGtkcqXGPeb1Lsmb75+/cT2ZuFf/GjrpRfBrusfWAABn/DkcGhB5JWr
      V9nZ2yOfma9kuGdP6E0mdFsNHE/A1RQ0eYA57HN/a0omVaC1u4kcS5OcP9krIODYPFEEVxsN
      jG6XWGK+0GRJDqHHRJKhOJ6l0eyPSSXC2D6oWphoPIGuR1DFLO1OGyl09okwAQEPudAiuGfY
      Z5oTfJIxp21DC8kkotqB4yHwBMMRIlhVZDrdHpISIhmfZ1/iYwyHSKEw2hNaJO1PzEEQ5UOF
      8VkgSRL/8A8+eOlF8BMG8KBTNkk9xL/7K28+dciFFMH4Hpubm7z5xsnDoUftGns9m1JepLa7
      RSpXYtBpIodjKL7FxFdJRmTW79xi4fJN+u0mK2trKOfgB/i9H7/8IvhpFNP6sRbAy8qTC2OJ
      EqJnsbAy3xMEYzCisLhIJLTfCHvz/j0sV8Iyhgz6QzY2Nqg2OiwvFBkNhwy6DZpBcauAc+Lw
      cOh+n2qjzcRTyCXmCwzJLi5RvXeLZqePIMrEEwlSyTixmA4CJBIJoppMrWMgiz5aREdTgxCI
      gPPhQovgvmmfqSf4JGPO2xMsiQKZxNP9PBdKBFuWhaaFMIZDRDV8ZN+sp2GZI0amhRaOENa0
      x/KAp9MpgiCgKIec3/ewXX/u9kxPQpIk/sHv/8tDRXAxrfPrv3RQ9wR9gi+ICP7eD37CV770
      FnfvbSJIEm+8/tqxDRxEYHNzi7XVEnfvdFm+tILZa6LFM+BO6ba7FHJJ2sMpqXiIdmfA0tIC
      O5t3cdUMV1eLc9g+mt//yfahIviVxfShCyDg5eMJnuA0eA+uXsp8/bm0SJR4PE4kHCJbKNJv
      1rGmY6qdIXE9jAgMhgNq21XMUolSQuP+nQ0WLq3Qbptz2Q4IeBqHeoLtqU29PaSQT6NE5i9S
      VSwWUEMhMmkBN6bS6bTJFZMosojggzM1WVxdI5ZMEFElQpEkrWaTdKYwt+2jyKeiTA+5A6Tj
      Fygj5IJzoUWwoihn2sM36BP8Aopg3/fZ26uwsFBmb3sDLZ4lm4of28CBSXoeu9ubSOE45UL2
      xOc5bSRJ4r/8377FdJakYHw4VrfjecbMZ+Pf+Vc+x8+/uXLk0YEIPkIE+86EeqtNKRfFdCP0
      9nbIpk4ugjvVLSQ9jSr41Cs79AybWFjCQ6LX6+F5HhE9SSIi0R5OiIUE+qMx8WSKdDzC1FdJ
      xs5mS9Luj186T7A1tZ/1FF4oDlwCREUjFtUQ1TiqP2A0ns5txAf2dvfY3NzAmU4xJjYLhTR6
      Ok84HEIRfbrdLtXdPSa+wEIujiiKfHR7k0gkqHIWcHY8UQTXml1EUeT69WtzGUiXV9jd2iRX
      LBKR8/QMh2w6jiCpZJNxPF1DEkWMoYQaTZHJJAhJIpLr0Y1EUM8wJqiQjs60BfLxEWbcnsw6
      Zl4bny2EG3A0z60IdqYTfFE+M0dYIIIDEQyHiGDPmbKxuUW6sIDVb6JEU3OJYHs8oG36ZGMK
      9bbBQumwbiU+hmHu/yAFH9sTH3mlzwpJkvgv/ta3Dn0Mehh/+7/6Uwj4gSf4mLy4ItiHYjHP
      bmULSYrhj+tzLoAhm7sGXkqiY3j40yG2oBFWRXwAd4IjqEiey531O9y4cQMQMbUoU7NDrzsg
      v7ByKo3xPktn8PKJ4IDZOHAJ8B2L7Uqby5dWwPceVdGbh6gq0JuAJrh0egN2d/foD/p0Oh3G
      E5uFUh7DnFBcWCSiwGg4YmSYdLt9FEVhOArCowPOhgN3ANt2wbfp9KfoYVCipbkMqNEUl1bT
      TCY2igi9bptsQUf2J4xsgUImgSiIFIt5JuMhE0IUywnqtQrZQonxsE8icfI70FEU0zpT93h3
      AEEQOJWrQcBzxXMrgs+aQAQHIhiOEsH5Mv64h5osoodO/iTGHg9Z36yQL5bJpmL4vofteKjK
      4zcf33MwJw7ROfsRHBdJkvjP/9bvzuYJ9v1DKyo/RAD+j7/6pz91eCCCX1gRvGYcqpEAABDZ
      SURBVFdrEhf6GGpuvgVg9iGkE5I8fvrhh6RTMT7erHJtdZFuf0g+m6DW7JPLZ0EQqe9tE9JT
      LBTPvrdtd2AFIviCc7gIru6L4PicNYEeoqohJFlClkUcX2JxYYHRyKCci9NsdVhaXsYYDel1
      uwxGBrt7lVOxGxDwNA6KYMdF8GzanS7Dtomn1iG1dGIDajSJ3dzDCOdRlBCpbA6/XiVZKtDs
      DFhbW0WUQ+RzeTyg0xSJxlMnf0czUMroTN0ZPMFPKT8S1LN+8QhEcCCCz8zGCy+CjW4dUZsv
      jNmZjtnY3CG/sHygQhnAcDhEEkQ0PYrgOexVmywuPP7o1RwOCcViYE+YeuJcOcoPkSSJ/+x/
      /d1je4KBU4+G/jf+2Gv86ruvPPZaIIKftQgGioU8e40my6UC9zZ351oA/WYNVw6jyQL31m8R
      0VMgyeDaOBODnUafy0tlQnqUUbdJtd4km05wb2OTXDZNq90jIokMd3Yo5rKIisbe9n2iyRyl
      OVuq9obPVgRbU+eZ2Q7Y58AlwLMttmsdLq8ts7W1xeUr8xXGiufKFOIyt27fZjAcs7e7w2A0
      otNpM7Ehn0lgDIf4QKVSQ8Fir9YinsljDvp0mxXGrszqYo5ms0Wv22FkWOwFQjngFDhwB3Ac
      F8Gb0u50wBeoN5qsLJ7cG+y7Nq2uweUrV2jWasRTacxBFzlXRGXKcALZpI4IlFevENMjDHpD
      1EiEqezhKxqpeIx6a8DlS2s4roeITyI5f0PtclafMRz6dPPBYod0Yww4XwIRHIjgM7Pxgorg
      CRsbW6TyZYbtKko0NXcub7fTIZFOH9xvPUMkSeI//V9+56XLCT6MP/8n3+Krn/skTzgQwUeK
      YJFisUCl0SaTiFNpdOZeALVKFQSParVBJpGgPRxQKC7Qre8RTaRot1royQyrc2y1TkJ/NLkQ
      nuCp7T7rKTy3HCKCx2zXOlxaW0SSQ7jOfDnBnufhC9DrdBi0q7S6FktLJerVHQbmmL3tPRK5
      Erjz5x4HBMzKk0Vwd8C436ZQXpjLwKjfIZkrois+ghSCyYSdepcrly6zV6mQSKTQIhF8/fyT
      3xdysZcuJ/gwokGe8BM5dxHsuS6CJD3zsIFABAciGA4TwfaE+w9yguMhn1rXYrF4cg1gj0dM
      BY2otm/Kc21cX0KR9z98wxgRjZ5/a0hJkvhP/ubvzOYJPoS/+md/jhurh0euBuHQL6IIFkRK
      xQKVRouOa+EgwxwLYGJ06YtZBHvI5k6VkOzRNGSWi0kkAVzfw7ZMKvUuV6+/inyOt4aBMb8I
      do6ZURbwfHJQBE/3RfDqQprBaEyl1jgVQ51OB6PfxiHEQrnM1BzQG40xRkM67TadxjZmoIMD
      zpmD/QFcD8Gb0jU83n7rcwxHxlwGND3FzuYOuWyKXEkml8/TarYol0sYjoyMgzsdI4WihM+5
      M9JiLjZjOPTBhLCgndOLTeAJDkTwmdl4sUVwvky/WUGJJlks5Y9t4LPY4xETQUPxLZBCiJLE
      2DSIH1n4ar9QVjR6dl3j90XwbzOx5/MEX1vJ8PU/99XDjw5E8AssgutN+p02C/H5vMAPRXDE
      HtDutejYUSLeAOQIqVSMZETFdCRa9Sq5fJ5arUYyk0PyfbqtOlNCXFqZzxfxJAbGdG4RbIyD
      aswvMgcWgDc12a51uXp5iUm5xP179/ZbJs2JZYyIxlNoagZnJKP40B+OUFyRxsBjavSp1iXy
      5WWsYZOxZTM2x/TMyZktgICAQ0Swj+BNaHeHTEc9ikvLcxl4KIIL+Rx6LEq12iCXzSECCXdC
      s91neTFFu62SzmQIaRqxUAHP8+l3O+QXzs5HsJSPz50TXEif3TYt4OwJRHAggs/Mxgspgl17
      8ign2DG6OHKEcj5zbAOfZWL0cZUYU2NAMpUEwDIMREVBlBVk8ZMPaDwaIEfiyNjsVJosL5Yf
      O5cxGKDF40iA0W+zXW1RWlwmqX/SQWZkGOiPiWefycQmFHo8+USSJP7j//m3Z9MAz3k09G/+
      6lv84ttrTz08EMFHiGAEkVIxz16tQrPaZOnylWOf/DDGwzbTaIR+o0mv02A0dsmlk/R7FUwp
      Rz7iMZz4xDWRyl6Va59/F7PbpNFsk0nqbGxXKOZSNJodwrLIaHeH5dUrTIZdFE1HmJp88OEd
      XFcikU4TkgWalR20eJpRr40WibJ+Z5PX37hGq9lCj+uYlstCKc/QnF8EP0/YThD2PCuHeIJN
      tus9Ll9aJpnJMx715jIgyQpTy8L1PAQpRE6PMBiO0JMpyqUCm5ubOLbD0LIf5R1UqnVk32Kv
      2iJTKDHodWg3K0xchZWFHN2+gSCIxBMJJDxyC2WiWhzBsxmORviiiq6AMR7T6hksLpZpV3ex
      XQffl5iYBvYMe/+Al5fDRbA7od2zKGSj+Mp8Ik/PLNDd2qC4uIQq7q+4qOcR0hSq9TY3btxg
      OPFJRiQ6/TEhERYvXUGP7ucGa9EIlpBFCukk4zrNzoDVlWWmpsj23h5yvkgyqqGXowjS/u1d
      EkRCqkQiaZJOZzH6HeKLV6nXGqQSOq7noUgCy4X4mecEz8o8uyw9HDr9Cb3kBCI4EMFnZuMF
      FcEW9ze3SWdzdBoNfFnj6uWj+84ehT0xHxXG+kSsehgjC1mRCIUOv2r1ul2SqUNKJHo2A9Mh
      rs/XOlWSJP6j/+mbTC5ATvDpcLbv4+99/Wt43mxe8zMSwRLlYp5Kc8CVK2vc25yv/s6w3cCR
      NGTXpN4Y0R+aJHQFZ+qxfvcO1197jb3tbfLlRYb9HqmETtfwEP0JnmNRa42I6wr9gUGxkKdR
      ryDpxbkXAMBobL9UIjhgdg4VwTv1HpfXlqjsbFOa0xGmZ4ospDW2Km027t7FmY6YumCaNsXy
      AumETipXYtCq4DguY3NEaXEJEWi3OjQrOwxtgeVyjtpeg4WVFaQZbqsBAUdxUAR7PrgTWp0+
      iWyRqDpnMRPfpdkZcunSJYxhGk2RUCIx7NiEqTWk2e4xGZssrV2l0WiRL+ZQVRG5XMa2DEJ6
      klQ6haZIXL6qU6vVyRdOp3rESjFx5jnBs24FziPveH9OnPG8zmNbNj+BCA5E8JnZeHFF8MY2
      6XyJUad2KoWx9ra3yC+uoHzm855MJo9E8NgwUCNRzrAx/GNIksRf+RvfvBAa4CtvLPOX/8w7
      j/4deIKPFMEy5VKevXoDc2ggWe5cC8B3bXq9Fr6WQHQMQMCdjPGUMDv3bnP1+g3q9SaJWIJU
      zmVna5eltSvnUjfTsC6GCJ4EhbGeyCEi2GCn3ufycgFJ1cGb78MbtKsYjkyzXmU0GtLpdlBD
      KsPhiHyxTCYeIZ7Jw8Si3W5jDjq0ekFf4IDz4Qki2KI9dMjEFZToybPBAORImnfeWsYwRoxH
      fSxPJhQSSKfDxEICHcMhn07ixyMg+uBL5FPnUyZltZiYOyf46YOYSQuexMbTxuSSkdlOeIEI
      RHAggs/MxgssgvfDoUedGlo8SyF78qZ1U7PPnc0qxdIC2dQnecCe6+B4HOgX/MkBDt3BmFTy
      qNzhkyNJEv/h3/jG3DnBT+O/+fd+nmvLyWMfH+QEP2sRLMqUSwV29zYQQnmGtcqcC2BAsrBE
      s7ZJqwpaLIVjdvBcj+bQY2Uxj676jF2ZdrNOtrTIsF0nlkwxGDlntgAATMs5cxHseUHU6fPM
      wZzgyb4IvvrqTXY27tG15kz69j22tza4tpqnN3KZGEOUUISlXBK1Z2OOevjilI4TYbWUo9Jq
      YJomQ9NGj8+fixwQcBSHiGDAtWh1BoiixGuvXZ/LgJbI89bri2iKyGS8Q2ZxCUX0UbUQUmeP
      fD5Df2iylFT5/g//Jdff/BnC2oBUKoM041ZgVlZLyZnyAp7WJ/gwNHW2/XzA+fLciGDPc5na
      DiFVnflHdhICERyIYDhEBDsTk3ubO2QLZcb9Jko0NZcGsM0+TQPCskfqQXizPbEQVQ1j2Cce
      T3xmhEe3OyCVOigcp5aJJ6hoofnvDJIk8Zf/x2+8VDnBh/GVN1b4K19757HXAhF8hAiWFI2I
      JtPt1BCJYvXa8y0Aa8TW7oCULuFOxzTbA6ZGF62whtXeQY6kyMVDtHsmkbCCqGpYozHjURfT
      kRAdE3MK+WyMvd0qiWSGievxypVLjyXUn4Tx5OxF8LMmaI90NAcuAY5jk0pnGZsmrmvjnkL5
      78VSlt1qi63NTTzfJRZPUSrmSaZzRDWFzc0tPM/FcmGxVABcWq0uOzs7SEqYTDRMe2iyvFhE
      VlSciclkGnyxAfNz4A4g4lOrNVi7fI1xv4USPbz5w3EJ6RnyooomQSwSotrss1DK0mg1yeX2
      vcz5dIJG1yCXTSEIIuXyAsN+h/xihHg0jAgkcak1u+TSSVzfIxyaX1yulZPYL1FO8GEEhbuO
      5rkRwedNIIIDEQxPEcHOqEUku0xMO/nV1rYM7m/t7iexiAKp+NGOLXNkoOnRM+8pLEkSf+mv
      zyiC57g+//ov3eRrX7n21KMDT/DzIIJDMv3egLhg0hu7cy2AYaeJLahEQgLbtTb13W3UiI4W
      0sB3cCZjJr6C6JiMHZF0Ikbct9narrB6+eqj3mJngTU9PxEctFJ6Pjkogm2bVDaLaY6InEJ9
      /mi6wEpeZ/3uNu7UQo4ksCcWxqDNeDJlc3MXx3WRQhGSEY2RYdBqtRh1W3RH47ntBwQcxUER
      LPjUqg1WV5ep7m7hqw1ILZ7YgCj41FsDLl+9gud6jHptQpklQoKNr0RJx8JYnkIiFkHwIeV7
      iLgIUohsfP7KD0dxqZyasULcybdA6dj590EOeDqBCA5E8JnZeEFFsMG9zV0y+TJGt4aoxVkq
      F45t4LPYZp87W1Uy2TzF3H5wW6fTJZ3ed65Z5ghZ05HPWvV+BkmS+A/++j9jYr98i/4v/trn
      +eXPX3ri3wMRfKQIDhMOSQwGAxYXFli/vwPzLIDxAMsV6Xa7TIZtbCGEZ08Yj3q02j1y+Tyi
      1CMaS9PrdOh2m7iuRCyV4srq0ontHofJ1H0pPcFBCPbxOUQET8lk8xijAffubXD16ivzWRBE
      CsUS7sRgY2sP19334JpTl2RExTAMxmMT0zDoDw1y5RJ6JI4svHw/zIDnj4MiWIRqtc7a2grV
      7W0q1ToriycvRKVGkxibuyysXKZczDNFJRYJ0alt89PNGu9++V00VaK6V2NleRFFlYmHPYRz
      2BJdXphRBL8gwXDxaFAl+rg8MxHsuS6eD7L8bOLlAxEciGA4UgSXGLaryJHkXCLYmZqYE4F4
      7MmPNMejHoTihD9bOesMkSSJv/g/PN8iOBpW+Lv/9Z956nGBJ/g0RbAaJqxKDAYjYnqURnc4
      lwh2piat5pitjQGLywV2thqUyhkajQ75fJpms00sLBPJ6+e6AGA/VHj6HItgxT7nR2MXkIMi
      eDolky9gjHqE9RT21JzfiCihyj6dbp98cZF+p02nvs2de1u4ro9zgfwPAc8Xh4hggWq1xtql
      y3Treywsr85lQNHi5PMujfqEQqmEKMpEQwU0PUEmk6ZarVMs5JCeQe7slcX0jCL4DKpWHXF8
      +BQy3wKOJvAEByL4zGy8mCLYMri3tUMmv0BC86l0LFYWTl4e0fcc7t+7RyyZIxzRiEUjGMaI
      yWRKOv3syp5IksRf+O//6amJ4N/67/71A1+27/u47mxtf4Jw6GctgkNhNFViOBjQbY7wkIGT
      L4DW7haJ8iUS4oQff/Qh2cIiquhhGGMsY0DfcHj12pUzj/8/DNvxsIMw5QvN/w+Rs6rx5OLJ
      2QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP  &amp; GDP/Population by Country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d4wkaZbY9wuXGZHeV7ry1dVmemZ2dmZ2945c8HZJnhHJIwiCgkAZHP+Q
      oSSAgEhAJ0oC9wQKPFGiAAkgwT8IgThIIkjhRFAnLIlbEXt7Zpc7s2Zsu+ry6b3PyMww+qNm
      2kyXyaqtruzsjt8/3Rn5XsbLrHjxfe/F994n2LZt4+DwiiLO2gAHh1kydw7Q7XZnbYLDC855
      rhH5OdrxXHBmbNCul8lXGiykslQOH4LLz8Z6mk8/eIA/FmNtJYswayNnyHmukbkbARwgX6mz
      EA0hiCKCS2NpwU++WMYXSjEedHFuEdPjOMAcYhsG/kiccuEAgMFggKLI5PZ3WMgsOX/UczB3
      UyAHuHZtnb3tbbJLa9SLe4xFP6lEgKAvjs+nztq8uUL4PA3a7XbnYn49GAzweDwX0rVtG0G4
      2Ox4HnVnee5Z6g6Hw6mvEeEyngPo/R6S5mM06OHz+QAwx0NGtoKqiIji04PyYDDAo2mUi4cY
      kodUPIIgiHz+nS3Lekbnc37v3h1+WqtcyE4bG+GC4eE86s7y3Feh+x9/5efxuFxPHTMMg0a7
      zt/7o/9+qnNdyhSoWcrhWbpBIZ8n5FVpdgcsZZJ0B13+6OMPeOeddymVyiwuL5Pf30U3Jd7Y
      zHBQ6fHaZpQf/P53Wb7xBvawjSlr5HbusXr9DcxhC8EdhHEH3AEWUwkG4zGlnpMKdQDrhHu3
      ZVsctg6m+oxLiZcE4fPUk81wYpJJBGnVaowkL0tLS1Rz+xjmhNz2PSJL1wl4XKB4uZaN8PHd
      h8STGdILEfr9IYe5HPFkmkxcZWevSrvTxjRNJuPJZZjq4PAUl+IA0XSW3P1P8fhC+P0BXKoX
      rz+IX5WxjRGhRBJBlFhYXKa8ex9kF7Y5oVRtEA6FCAW9FMo1EERCwRDhgI9cVSe94Mfn8yFJ
      EpZlXYapDg5PcSkxwFVSadSR1ItlOkzTRJKkV0YXwDItROli97kX/TuHNQ/iF4JlwzDo9XuM
      RX2qc80+DWrbWPDMFzmJYqfDYaV0sVNZNoJ4wcDsEnQ3Y3E2Y4lz6RqGgSxf7M9k2zamaV5Y
      /2c596x0AQzL4He3/uVUsi+AA5h8fOcBmXgIUQ3gEgxavRHphQgHhwXSmRTtRgNZ8xMOeMl3
      2vxB4XDWVl8Ityyf2wEczo9hTvj2nX8xlezsHQAQEKhVK5TbB6SiIcIegd2iTadRpNXsoPgD
      KJ0e4cDGrE11eMmY6VNz2zLYenCPQDjMYDDC7XZjjAYUGgNEY4iieZBFkXAohKq6Z2mqw0vK
      CxcEV8oVEgsnTxPu53M0TeNCn33aA7ar0M0GQ2SDoXPpOjHA+XU7vQ4/Kb83lfwLMQV6ktMu
      fgBVVoi4XafKnIRpWkgXzog8qyuLEmuR6Jm6P2tQ53A+BAQS/gUAot44mWD2RNmZ/1Vsy+De
      nTtowThuWSCVSjLo9nD7fRyXCPu0XOR7L0gQHHCr/Nff+NOzNsPhC4wMnd/8/34DgF+8/m/x
      a1/9j06UnbkDjNol3LFVVpJ+fvqjH3KYKxIN+vC1FArdPj7Nz6Cep4eHP/bOm7M21+ElY+ZL
      xxVPkE4lT7PVIRhdIBUNY1gWtiWytnkDadxmLKhY49GsTXV4CZn5CCC5/WyupZnYEtlsBsE+
      Ct5EUUCQRDyr14n0usiqF4Cox8trieSFznXZS3Q9LuVCn+XwfJFEmXcWvwbAUmTlVNkXLgt0
      Fp1Oh0AgcCHdec1qOFmg8+kOBoOpr5ErGwFGgy67Bzki8TSJaPDCn/OHeztXGgR/c/0av3Tt
      xpWdz+FnZzDu85/81n8wleyVOcDu3iHZpSyGJbG/84ChqeBVTCxRo9uqMjYsFEVjMRsnnyuQ
      ySTZydcJB7y4XBqCPSGdTl+VuQ6vCFcYBB/NoQ/3D9nb28OcTBhOLJYyC3iCUbxejahXpdZq
      MOk3KFbqLCxdw7ZNht0aw5FTD+Bw+VzZCLC2uszO/iEL6TSxsIpuuYiEvAiiSDQSwjK8KKKM
      ezIAwyYSjeNSRcxIhH61gBw7erAhiiLKRZcH23DeKj1JmHmizOHcCLjl6ZbOzEEQbNOoN4lE
      I4ATBJ8HJwg+mwudRdd1VFV99C/AeDhAdHuQj7lhjkYjXIrMxLQxjQm2DZpHO/ZmPBodLYp7
      jPDo4gf4pFzkzv07FzH7xDSoKsv8e2+9c6HPdHjxGBk6f+c7//NUshdygL39PW5cv8H+7j6h
      oIfOwGQh5GfUzPPh/oCv3lqiWG2yupRhd3cPU5DZXIpzWKozHkM8GmA06FJrtFlcXia3v4s3
      HEc2BtzbL/H2rXUOSnVWsikO8zlEScGl+VhMJWgNh2zVqxcx+0Q8ysXWFjm8mJiWycfFD6aS
      vfAE9/N5U6en48WkUq2hBQNkskvsbm8x7Db46M5DltY3UJWju+7+9kOC0TjVWo16q0MyEWDn
      k3uEFtdo1Yu0uiPSiSgH+TJrKT8Ptg7QIhGGfZPxsHdRUx0cTuRCI0A6HuaTTz4hGF3ALVi4
      ASYTJLcfvbFHPBqnMxyTDgfYfrCFzx9AEGVuv/UV+u0qPq8XRVFwuTWiyRj5hw8wbPArQ9q6
      SDbq4/5umXQ6haRpELKQnZu0w3Ng5kGwMRqwtbNPIrVINOQ7Uz5XrWBcMEA6qdhaFASWQuHT
      7ZzDgPBVDYJ7vS7l8XR14zNfCyS7Pdy8eXNq+e5oRPWCjbFOKmqJe892PIf5wbQtHlbvTyU7
      MwfoVHLcPaixvr6Gzy2BKDEY6gQDfgb9HrJbQ7QMJpaAiAGSG4/qYrdRv/SlEG8m09xMLFzq
      ZzrMjok55v/48T+eSnZmDmDbFpZlY1sjPvzogPXVJB99+DGLmzcZ9ga4FBlj3CedSvHBBx+B
      O8A3v/7VWZnr8JIywymQxOrGNSJ+AT27SK9dIxqLYEwsYvEFxsM2Pd2kr48JBMPEkpnZmerw
      0jLzIPi8fHywT3E0XdevL2JbFsIxMUDS7+eN5OkL7eYxIHxVg+B2t8V3978zlfzMg+DzEvN4
      iYVPz9ichGWaiJKEKsuEtYvtMeDw4iOJMl9Z/vmpZF8YBxh1a3TxopgTgqHP13GMKeQ7pDOx
      R3I/LeR+5iD4RjzBX3nbiSdeVvTJkF//9l+bSvaFcQBzNKA1HLN79y5vv/Mmu7vbJNKL9FsD
      RoaOYBusrKzM2kyHl4wXaq2vS/ORyaTR2y1UTaVWayCILiy9gym8ML7q8BLxwlxV7mCCBAoe
      M4jL42Pc7LASDSMgUtxvEv2sEN7vdrN0zu5qn/N5OYDz4OvlRhQkNmKbU8nOQRbIxjAeZzKc
      eoDpeVWzQC9kUfxJNKpFyvU22aVV/J5jqnhsi6E+wjL7BINB3jvc599UilN//mYswb/9+pcu
      0WKHF53hZMCv/1/HB8FL4RV+/U/9rUevZ+4ArW6fxVScg1wBtz3AH45Tq9VYSKWpFQ+RtSBe
      r5d2o04wGGRsmnRH0zfJGk7Gz9F6hxcR27ZpDZvHvhf2RJ56PfMg2JyMqDa7uF0yE1tEEy1M
      2yJfquJ2q2RSEVptpxbA4fkw8xEg4PfTaPWIJrMoAS+SbCOJMn6fm2q1jhYYEg0HwDZnbarD
      S8gcBMFP02i18Pi8U8uLgojrsxqAeQ3qnCD4fLr9fh9FO75tpSiIqMrjTRZnMwLYNr1eD9Xj
      RT61X7+NYVjI8uMilp1GnZ2D3alP9VY6y7VY/Gcw1mHemJhj/sn7/3gq2Zk4QH7/ISPBTUwQ
      qZcLxFJL6J0quu0i4pUpNfqsLqXY23nI2NIIqBaKP0o8HKDS6/LjQm7qc2WCIccBXjEMy+D3
      t787lexMHKA3NLl2Ywlz3KPX61O/v41HBUVx054IVPe26eojNlaWqeRKtDo9GoU68a85rUsc
      LpeZOEAiFuDTTz8lHglgCjKa6iYYVMEWGA06aF4PXk1jb2cXzaUyNi00TZuFqQ4vOXMXBO8U
      i/SE6U1O+4PEvEdB87wGdU4QfD7dbq/Dg9bdqeRnngY9LzY2pmVNJRvRPI8ufodXBxswrOnS
      5jN3gFGvzp3tIvGFBVLxMDYCkiBgmBaiPUE3JVRFBFFEEkXuVytT1wO8lc6wHI6cLejwUjE2
      Rvz9P3yOrREvE0lWwDQQRYmPPvgJli2ztJTgh9//Ibe/9GUsUaZWraNqGm/cuj5rcx1eMma+
      FMKyBEKRMNVKCUmSUGSFarXBxkqKnn60J0Ayu4zP47SGc7h8Zj4CKJqXRFxkcXGRg/0dMtll
      ZBHGEwNFcSEIgCCAfbS8Nen385Xs0lSffVa3N4eXE1mU+ca16fZvnrssUL3ZRJ0isBUFAU15
      +nH4vGY1nCzQ+XQ/XwrhcZ3d+GDmI8DnVCplEk92Zxt1qY8kXLKI3/N47cYPD/enCoLjXi9/
      4+vffB6mOrzgDCcD/v57/5C/+ad/40zZF8YBms0G1XKBMSrZqJdqOYc7vo6sKNQLB4xFN5tr
      y7M20+ElY+ZB8JNo/hBBn0arq7OxsohgTeh3u9TaXXK5/KzNc3gJeWFGgFQqjSgerfqUMMiV
      a8STaSwbWqJBOnu0t7BblgmpZy+LCLjVM2UcXk4EQSSoTrcX9dwFwU5R/PS8qkHwpRXF1ysF
      Gt0x62vLiMdsLgfQ7XXx+/zPHLctk+2HD9CCcTILjzu7DYdDVFU9drO6z31x0Ouj+X3Hzs8+
      KOb54JOz93/6M9dvsR6NnSnn8PKhT4b85v/7rRPf/8tv/xq3U28AZzhArdlmJZNgd3ePYDiB
      YOoM+y1wBRDGXSzFh8ct0h4PyZdbZFMxiqUy0eQSYY8AikZmIUZufxtb8aMKIz7dzvO1t26x
      d1ggnc1QK1UIhoOUK3VCGmwVe2yuryCJJjv7ebKLixTzeTyBCIvpBL3RiHynfeaPMDScjbVf
      VSzbYq+xc+L7g3H/0f9PdQC93+GHP67y9ts3OawMEEYNXIoNwhhhMsFiTK3bxa+5GdQO2BdV
      VlZXqOVrhD1RCod7eDWJ7Z0S4cQYj8vFcibJ/s42E0Qq1TKiHMDQB4zaZfrqEksrUVrNGv2W
      zebmGg8+uYtnYYmJ3rm0H8jB4XNOdYBEapHNTQ/N/ohJp4yseZElm5FposoyA9MiEAhijXVU
      f5CA34tLkvH7vQiizPWbt1mIR+g22ij+IOK4R72js5FNc1BuEAqGUWQveneIy+MnGAxTLebx
      h8JEPDL37m2RzC4hKCqWMt0KUAeH8zB3QXC5XkdwH9NA6wsEVRX3FwKpeQ3qnCD4fLq9fo8B
      J7fSCXuiaMpRJvGFSYNOS7nXJV+vnCrzbmbpmYvf4dXBtAx+f/f0muCvLP8ca9GN2TnA7/3r
      3+Vrf+JP8v53vs3tP/lnGFZLRGNRBFHENAz6gwGKYIPLi6l3UDxB/B6VXLt15lKIjWjMKYR5
      hZmYE/6fT377VJlUID1bB0glY+QP9tH8EXLb9+i1W7QHE3r1Auu3XqdRLzCeaCwlDSqtEWa5
      zmuv3ZqVuQ4vKTNzAC0Qo1rIk0wnGMtubBMiQRXJDtPvDZAVFb3fpT/2oHcbSKpzR3e4fOYu
      CL6XO6Runp7jfy2RInRMF4l5DeqcIPh8up1um/dKPzhV7vXUm2RCi/MXBHtdLhTp9LVAx138
      Dq8OgiCyFD595XBbb9EutZ6XA1iUijVGep/FlVXE41dRfIERP/rBR6jBIK/d2uQklY9LxTOD
      4P/hl//ceQ12eIkYGTp/+3f/26lkn5MD2OxvfUJk+RYHO/fpdPv4w0Gq1QF+1SZfrPHGl17j
      7iefsn77bbLxIGCC6EKwLQ6277KzmyO9vMZwMMAbCHFtdfH5mOrwSvPc6gES6WX0bh19bBKP
      BNDHJqsb1xiNdFZWlmk36kQiIbrdHoZhAGAbY0aGSafTJ7uyiipLxOIxbNNgMnHW9jhcPs9p
      BBDJLC0iWCaWKNJu99hMB7AFifDrb1BrdomG/TTbfTTJpNkbEQ9pvPH2m4iCiSWINBotFHtC
      SzdZW11mPNJRFIWIx8ONeOL5mO3wUiCJEm9lpusjO3dZIKceYHpe1SzQC7lJnt6t09Bl0vEv
      VurY6PoYVX16fc+432QkeAD7qaL4P9rf5Q9OCYL/06/9cbIX3EbV4eVgMB7wn/3vf2Uq2Stz
      gEKpzsgW0MZ91HSC5mGBRrtNPBHnow8+4fXXblHv91gIByiVqyTDKro7jiBAvXCAqXhYX84e
      3dVOGbTmbEBzeC7YmFP2Br2aonjbpFwuUysWaba6jE2DdneA26UwMmwWl5bQJItYKkO/22HU
      KVPtTsAc0W53aPWH5POFKzHV4dXiSkYAazLmxptv41cs2l2dwvY+oWiEQbeJx+NDNAaMJY2g
      x43s8zGKZYjGErhUDU310DSHBEJH5Y2CIJxYnvmZwFV8JYcXGgFJlM4WwwmCX2pdJwg+m0sf
      AbrdLj6vh7Fh4XY9bk1oWyYT08alPHvK0UjHfUIbk/F4jMv1uDHunUqJu1vPbn6wEY3z9ZW1
      S/gGDvPOyND5H//1/zqV7KU7wCcf/Igbr71OrTvGK46QtQD3PvmQa5vXKFYaJNNZNHFCR7cJ
      Bzz0BzqddoNEJExzYBAPeijXaqQWV6nl92n0xqSjPkzZS3ohSmMw4F712YIYr+J0j3Y4wrRM
      fpr/0VSyl+4AC5kMpdwhqB62SzV8YZ2FVIpEJEh/IjHstTgo5pDdPjptN2vrm3TaDTqdDsV8
      gVEiy+JyksM7H+FZvEHQrtDudnB5527dnsMccOlXleYJ4FdE2vgIh4YEohGsYYtqq0/A78Uc
      i8RjcSxZw+PV8KouPB4v40EPj8+H1+vD7XITiicoF3Zxa168qkpfH122qQ4O8xcEH1bKjKVn
      I3y/203imAZdTzKvQZ0TBJ9Pt9vrUtSn20t6ZvOKVr3KYDQhGI7i1R4/BbZMAwvxxB3k++Mx
      ddN46tiNeIKox6kYczjCti0Omvsnvr8UXuZW8nVghg7gUlW29/bxe9wMZTfjQRtj1GegD5DV
      OB5NolMr4w1FkWQXgj0hEAiy06g/Uw8QUt91HMDhEWNzzG+9/49OfP9Pbf7yIweYWXt0j9eP
      z+fF6FbojKFYKpIrlAn5ND788COkUYOdcod8sUy5mKNSqc/KVIeXmJnuD+DxeNECEQrbdxBk
      lYVkEsWt8aXbm7RGEgG3SDQawy9bKIHoLE11eEmZaW5xcfFos7u33lh46njys9lMNpMBbPZ3
      u2TjR0/2ssEQv/CFznBODyCHJ1EkhV+9/RdPfH8jtvno/3OXBfpia0SvS8HrOrtVIsxvVsPJ
      Ap1P96zWiE9y+UshGmW2cxUSC2kS0eDRH0CS6HV7TPQWE3eMoMvGRERzyYw/Wx5hGAa5XJ7l
      pQwjw0ZzKQz1IZrHx1gfkC9V2Fhb5cf5w6eC4G+uXeOXNm9c9tdwmGP0yZC/8e3/fCrZS3cA
      t+pBsE1sy2Rnd49SIUcmk2U8MdGELkOPH5erz06pi9UtUW2brK8n8QaTGIZBKbfHTz7e5ebt
      NVwC6KYLy5hg2k53aIfL59KDYMsycblUGq0Wk3aJxaVVqt0JigCBcIThoMfO9i6hUAiPP8jm
      jU1U1Uc2dVTn22h1ifu8GLKbbCYJpoWuDzHM6QocHBzOw+WPAN4g168HPtsC6RoAK0+8H4rb
      wFGLE2E5jW3bj7ZLun79KDix7cfL+q9fDzwl43O5yQQel1UGVGczPIenEQWRlch0K4PnLgh2
      6gGm51UNgl+4ovhisUQqlXzqWK1WJRaLn65oTuiOzKeK4t/PHfBepfTo9c8vr/AnVjcu1V6H
      +WY4GfLf/PZfZzmyyl//xt88VfZKHKDdbtPv1Bn0h8QzS9RqNSTBppAvIKleZGtITzdZTMYp
      lCtEwwGK9QG31lJUhwKVwx103Lx2fZ2RYdDSh48+W58Yp5zZ4VXEti1q/SpB7ezuIFf2JFh2
      aaxlI+QrbdbW12AyxB2MI5hjFM1HeiFKKZdHUNzIbi8hj0Cj0Ubvd2n2dMql8lWZ6vAKcSUj
      QDabQRRFXBK8HlbIH+ZYXL/JsNNACi+hKSKSKBCLJTg4OCQYDNLv9khms4xNaCo2yyvhqzDV
      4RVj7oLgerOJ+sTSB0UScUnT+fG8BnVOEHw+3X6/j+gWEEUJr+v0ZTJXuxbItth++ADRHWBl
      MYUgCFiGzmAs4vMc1fT2ul18/pMLW/ZbDXbzB49ef31lnYTP99xNd5gfJuaYf/7TfzaV7NU6
      gGViKx4G7SrtgEqhUCKVCNAYeigeFLEVLyG/h8FwQMTnotYzqVWL2LaIxx9ifTlDqdvlvSeW
      QnwplXEcwOEpDMvgu1vfmUr2ypdD1ysFDEvkYHcP07boDYYwrCIElrAnOs1Gg2azgaV3qDe6
      xLJZXJIHwXLaoztcPlfrAIKI3+NBcrlYWVlCRMTnDxOMp9Ar29TaPcLhMNGgn4e5BpFwAK/b
      TTgSIHjBh18ODqfxggTBFnsPH+KLpoiFTy9s3y4W6DyxMG4jGsc/xc7xML9BnRMEn0+30+tw
      t/HJVPJXXhBj2xbDoY6qaoiPNg8TWdl4XKRgWya2IB27t5iAgCSKn/2fqS9+h1cHAZCnzAxe
      uQPsbt0DRSMQCOH3exkMdFyKhKH30W0XYZ/Mg49/QuzmH2dU2WMhk6FZq6J4g8RCfu5Vy4/q
      AQTgN385fdVfweEFZ2SM+F++93enkr1yB0ilUjzY2UMRoFwq0htbxAIeSvldBCVAOBJgeSnD
      1u4DrMmATq+L4o8iDcvEQqdPjxwczsuVZ4GGwyGKIiOofvrdLumIitsbJBQKk0gmcYs2+/kq
      kVAIWXGxkIgTDPjRNGfZs8Plc+UjQCSRJpI4mrZkk7FHx7PJY7o+LD65gvSoBiDh8/N2Ont0
      yNkLwOEYZFHm6+vfmEr2BckCTU+z1ULzPX68rcrKKdJPM69ZDScLdD7dfr+Pok13XVzqCNCs
      FslXGiRSiyQiz+btLWNCpdHE69Hw+/wU97YYyEHWs09ve5ovFMik08fWA/zgYO8LQbCzK7zD
      0wwnA/7qv/irU8leqgNIkohhmMiyyPvf/x5DKcBCUMPjshmjMuh18QSjtJt1rl+/SXdsw7jF
      7sM6I1vFZXb5dLvCtWtp7nxaxqcF6Ms+hvn36eDlF37uy5dproPD5QbBkuwiHguT23mI4PYj
      CSaT8ZBqrcl4YhAMPh4VjGGbeqNNs1ZjgJvN9RW6gxFRj4opyfi9Pmzbxh4NMFw+FMHpCuFw
      +VzqCKB5/UwsgWQyw3DQQ3apCJbBxAJNddPvD/B4PNh2AlEU+cq7byNgMTFtBAGu37yFaYm4
      XCKD4ZiAz4NhwWgYRXYdTYNckvTo4ZeAEwQ7PIsgCIS06epH5i4Idorip+dVDYJfuKL446jk
      D6i2e6QXVwn7NQCq1RrxeOxY+UazSSQc5sNigY8+/RCAxVCYX715+8psdpgP9InO//Ttv32m
      3K/c+tXZOUCvM2R9Y4mdh3scGgb+cIxRv4NgjshX2sSjXlrNNqFEhmaliG5CJBymO9I5aLcA
      cJ8jBerw6mDZJg9rD86Uaw+bs2uPbowHbO+VWAjKhDMb6L2ji7per1PP5WkbNpvXlqlXKoTi
      WQJe50mww+UzsxEgtbyGJxREtEw6O9skM8sI1oTxsIPk8hOLRhFlN8vLy9QrebwBpyje4fKZ
      uyC4WKuB+6h+2C3JRDyeqXXnNahzguDz6fb6PTpW60zZsBa5mhGg1WgQCEeOXd9/HMNeH5fP
      y7N7QUJ90KfQPNouKerxnMsBHF4NTMvkvf0fnCqjyip/9vZfuAIHsA3u3/mY9Te+CnoDAxeD
      dg1RDeJ3Q3NgEPEqVGotQj6FOwd1XttYw2dNyJXLRONpBo0ykjdEZiHGQav5aCnEtWictzOL
      z/0rOMwXE3PM//3RPz1VJqiGrsYBWqV9JrLK/v4hbkFnMxNiEFxCrx9QPqwgK34s089yMkC5
      Z7O4tEy/WcfWVeJLq7QOd9B1g2Z1n8zC8SlSB4eL8twdQLc1fu6rX6FcLCLLQZRAgO7H99En
      NgsLC4wsFyG/F8Wt4BNkirkDQoEQqseNS5bxeb0M9TaBU3oFOThclOfuAMn00dr/9Gf/Yhl4
      VDfJxRQL0eBTsjEPxEKvPXXMk1okkXo8zVmNRB81zgpr2nO03GFeUSQX/+7bv3aqjFs+Sqtf
      fRpUlLl24+J7evndbrTPWiM6DuBwHJIgshG/fqbc/crdq3eA+t42+xOBsGmQvrZGq9YgHo/Q
      7w2wJQVNBktUwDJoN1sEwpGj3WFsC7fbzUfFwqMg+Fc2b/ILa87eAA5Poxs6v/Gv/qupZK9+
      BLAlvIpJpz9mvPOQkD/A7vY9yi2JVEhCNwxkRUIS3dSqJcRylYBHQwCuXXMudofL5cqXQgii
      SHpxkUalgup2UanWcKsa6WyWhXiY3hg6lSoBr4Ko+ZElCY0xkvfszQ4cHM7L1RfFLx/tDv+N
      X/zmMe/6eTf0eNuk2MLRTvG7W1tkF46K5kOaxrXokUxYcx6COTyLJEq8nvrSVLJztxTCqQeY
      nld1KcQc1ANY/PTHH/DGl7+M9IXlEa1mk0A4fDQ3O6Yo/vsHe/xRMQfAL167ztdX1q/ObIe5
      YDAe8Nf+z/9wKtmZOEC/XsLl8VBvd+hWmwjCBGPcx5ADdMv7xNdu0CsdkFhI0BW8HG7dYYDK
      O2/ewrIsxp9tmm1aczV4OVwZNiNjNJXkTOoB8qUqtjWhVCyg6wOa7TbhWJxhp0kotkA8GsYf
      jpOM+pkMewxMkX63MwtTHV5yZjICLK5tomkaw+GQYb+DJabRFJvsygrRgId6u086kwZFYnUx
      QLep4vI4+wM4XD5zGQT7n1gXJJyjPeK8BnVOEHw+3cFg8NQ1chrnOkuz2SQcPqMyyxrT7E4I
      B72ATbPZOkHHptft4/N/vr+Xwb1P7qOFoyxnksfIH3G3Uub+w/u4ZIl/5w2nUam6UnYAAA11
      SURBVJbDs4yMEf/o9/7Bo9e3krf55Zt/9ljZczlApVJipPcZjm3cgkF3DF6XTbvTZ3njFj5V
      AnNEudKknN8lvJClValg6D0qLZ1QwEWj2kB0u4nEUmCMqJXzyL4I2aQXQfKjd1o0VJFisUpi
      IU6lXCWcSJNOHDlRfdDn00oJ9YJ3CIeXH9My+NHhv3n0WlNOric/dxDc6w1YXMzQ7nQo5woM
      LYG1pQTd3pNRt4CiKAwHAwDa7Q7NUp7G0GIloRHKbDDqtuk06oxQH63zz+/dpz2yyO3tIWDS
      avfJrq7Ta9fOa6aDw1Sc6zYai8URJRlZENA0jUTKRyQURnYr0K5R7yWJetzEIn46zSFuVcWv
      udH7baLJJNFIGJdiEHBJmOEQZiDAaNimWGmQXgjw5rtfAWuILUSp1Ft4XLC9tcXa+sbP9ADM
      weEkLi0Itm0bhMttVjge6YiyC1l6PFDtl8uMJAFRENmInq9CbF6DOicIPp9ut9flcLD36FhY
      i7AYXj5W/tIm0mdlY4aDHv3hhGgkPPW+Fi730dxtMpmgKEdNsHRjQnNkPNooz8Hhi9jYVLrl
      R68r3TL3K3ePlb2ySHJnd5dYJMzWbpeoT2Zku/EoFrVGl0wyTqFcRlFcqN4g4qTHwJKJ+DW6
      A53RoEcoHCUUCrJdr/G9wiGqLPNudumqzHeYI8bGiP/th/9wKtkru42KsotEMgOGzr27d8kd
      HFCq1ol5TPYPqgTjQVp9m267RrvdZufhFvmDA7yBIKX9B7SGTnt0h8vnykYAl2Bx7+5dosks
      1niI4o2gqRKqCtpYRNM0ggERRdTpDAZ4vV78oSg+zc3y5m0GwxbgdIdzuFzm7knwh3u7HOoD
      FFHilzbPV1s8r0GdEwSfT7fVbfGvtn9nKvm5e5qUCgRYTCRQptwJ3OHVQxZlfvH6rzxzPOyJ
      okhPdxS/9Kvozsc/RXT52dhYZTwao6oubERsyyCXy5NKhykcDsksxXApMrXcDsWhxPWUj/c+
      3ePdt95EwGIw1PFqbmxBwjImiLKCS5H5Ue6Q7xUOub2Q4t9/653LNt/hJUCfDPkvvv3sJnn/
      3a/8XTbim08du3QHUN1uBqbF/s4WggijXh/f4mv0yts0603CUY1Kucxg1Oa1W5vU+2MUG4bd
      CbIW4NOPfkJ2ZYNms4LeHZJZXeHwwac0DTff/GPvXra5Dq84l+4AkqxgdFvomg9JMFBcKsWD
      HURMAn4vhmmRSGYQ6GJNdNrtLqpg0vOniccDCLpCPByg2ayCbWHofUaihqY4+4E5XD6X7gDZ
      5VUyS8ITW6ZKLBsGkiQBNrYN4YAIHPX7eefddxB4/CQZOwCCwLX1a0fHEIjFkwjCUcbW43KR
      9PmdplgOJyIKIouhZ58RuWTXM8fmLgvkFMVPz6uaBZqDonho18vky3XiqUXi4ekb3/4of8iP
      PihzPRbnz996/Tla6DCvDCdD/tY//y+nkp2ZAxTKDRZiIWwsPvjx+8SSadrNJr5gmEGngagG
      EMYdtECUQaeFKbm5tbmOPplQH/TpjJyVoQ7HY9sW5W5xKtmZrSizzQm+YIhquUogsoA86dHR
      J5jjHsVyE1EUMJFYCHs4LFYQBWfxm8PlM7MRYPP6NXb3DskuLSFi41Fd6OYu4WQGza0iaUHc
      AZV63+LNmxtMJCfodbh85i4IrjUbuDQPsiTiUZ6N6k9jXoM6Jwg+n26/38dSzKnkr2wEMI0x
      21sPmdgyi8sZ/F7vU8Uz3V4XbE6s5u/3+3i9Xg5bLfaLed5MplmNRK/GeIe5YmJN+J2Pf/vR
      66+vfeOZJ8Cfc2UOIMkulhb8FI0Ipb0dDpBYXl4kd3BIIrOENdap1xvEQj4qbZ2FiIdKpU5y
      aZVa4YCObvL2m7cpdjv8oHBI0ud3HMDhWAxzwnfu/8tHr9djm7N3gCdxaX5SQQ+NRh3TsjjM
      F1ElExDo9/s0DouI6jLXNha5++CAeCqL1HMK4x0unyt1AMntw68oCKIfRXWhmSa93pBQ0I8q
      A7bAeNjBHwkT9PsRJRfJVJJa5QDF6Qzn8ByYuyB4q5CnbVssh8LEvb6zFZ5gXoM6Jwg+n26n
      1+Hj2gePjt1YuMmCP3Ws/FNnsSwLURSwLBvxs6Jzy7QQpWdz8LZlHXWBEAQMw0CS5Wc6Qhx9
      3pGuaRgYpomiuBCf2DL+pM8/CVkU0QQJyXku4HACAgI+t/fR61zrgFzr4FjZpxzgwdYDblzP
      sHW/RTgkIbh9COaIYn4fXzRDzKcwtBQiPoV7H35I4va7JDSB9/7g97j1tV/AbesM9AmDTotQ
      Ik1u5y7BeJbUQoytB3dwqX4WFuLU603cbheiSwNjjM/nZTAYYI2HCKqf/a07pJav4RYmiGoQ
      Rh0mokYiGuRupcz3Cof8hVuv87Wllef6QzrMJyND5+999+9MJXvCOKNTqYm41QGWYeL2+Mmm
      4rz//T/AlDzEo0GymSQToN8oI3iDHO4fYA3qXLtxk3yuQ6HRIeRVGbRqjCIRbMtkNB5jdEqM
      XVHq+Tz+gIZhGNSKOdLrNyiX8xSbORaiQZIxjd//3h3cfj8BNwRiaSB4vLkODhfkqXmES7D4
      +MMtIuk4oVAQTVVRXAoBj5v9fJlgMEgylcItwUGhiihAozPk1q1bqLJNNJFEMseYtojbpWCO
      BnR1A0U6apWIbWMLEn6fj2AogOp243Ip+MMxAl6Jfn+CqrrRFJFCtUsw4CGVShLw+2g0WrP6
      jRxeYuYuCH5/+yEPex3eySxyLRY/W+EJ5jWoc4Lg8+k2O03+6ae/NZX83DnAz1IPYJrmZ4U5
      r4aubdtYljV3dv+suv1+f+prxEmlvOScZwORV5FXqrfIRe8q86orfJamnsW550VX+ta3vvWt
      C59tBoxGI3rtOrXWgGG3zs7eAZLbg0d1HyNtUy7kqDR6eFwCO3s5ZNHmwdZDBmOLUNB/ejdr
      2+bw8ACfz8fezkMEWWH/4QOKtQ7RaATxlItrMhqwvb2HLxjgcG8HZIXDhw8o1NpEImEk8WTd
      fqfB7l4OfzBAbm8HW1E4fLhFodokFAkjn9AY2DInHBbKBP0+cge7jCwJa9QlV6pjjwc83N7F
      FGT83mc3GLdMg8NCkYDfR/5gl/ZwgmTpHBRrYAzZ2t7BsCUCvmM2J7dtyqU8ktuLLAocHhzg
      86psb++gKBJb9x/Q7A2JhEPPNka2barlAoLiwdA77B4UCPg97GzvoCgyW/cf0Oj2iYTDCNg0
      a0XGgsq422AvVyYYOPrbSIqLnYdbVBttPF4fkj1hP19AdcnYiLQ7HTTt2Y0y5nAEsKg2emii
      RXD9Ou3OA2Khk0oqbfyhKNWdHfb1HtlkmFLPxuV2sbp4/JPBJ+k1K+wcFlBE8EVTlIpFVhe8
      FIQM8ikXMMDW/XugeGlVi6jBBcrFEmupADkjjnLGg798vojf4+bhw4cEIinKhSJrmTCHuh+3
      fPIdbqTrVOt1kkGVseSlVykgABGfiq3FcSsd0onjFxCORzqVWp3FdJJIPMnOzi6DtkQs6GGi
      +HErbTLJE9rRWwbtZh3RG6dXK5EvNcAas5BJUyrWCCtuAusrx8+3bZNuu87EHaGyfQ81mKCc
      OyCezlAqVoiqGp6VFcSjzglMeg3aZgCjXsKjKjy8f5/o0jqlYo5UOMDYG0MWDPYPcnj9CUrV
      Mv3eiPTS6rGmz2UMIIkisiRyZrtcW6CcPyCZXUYQRRRFYfqY32bvIIep96i1ushfeIJ9FoYt
      sbEUZe+wiqwo59IVJZGxYWIbxme60/2ZNK8fj+rCsi1kWUYSRURRRJYkrDO+t+rx4dWORtHD
      /V2WVtcRRRFFls/+zSSFSCgAtsVhoUy/VaPTH6MoLgTO0BVlIqGj5zuCrJLyCRSbOrJLeVZX
      EImEQ0enFAQmhoVpGMguhWd+XkFEssGyTPpD/cR2+nM4Aoj4PTK9iURGgmjslCXRtsFAH6NX
      qywlojzYK7OxeY3OVI8UBG5/6W0a9RqBQICHW1vE0stIrgkhzp5nrq9k2dqrcPuN18jtbRNO
      LiKpFiFLOVM3EgpRqjVZXtugeLhLMJ5BUgXC8nHTvMd0mlUG/T7tSQKjW8YTiKGJY0qtIZtJ
      FfGU36rXqjHo9ymUyownJtVqlVg4QL7RY/NaCtk4Wdec6JRrLcSBxJff+Qr1ag2/X2Vra4vF
      1Q3odzmpdMmajChUmtiqzVJmgXy9y+s319jZ2iKzvI446qN8du1apsFuoU4fnVQoQL09YPX6
      Jofb94hnV1EFA8WlYI0NsskYh9UWmUSCbGaNZrNJ0Pts2vyVSoM6vBqc5xqZyymQg8Nl4TiA
      wyvNHMYAry5fnK0KgvDo2HH5ftu2n3rfeSj2LI4DzBGTXpnv/HCXqNAg9frP029UWYy6+f7d
      Ml998waWZeASLGo9g5VsEtu2+Z3fOdooYmlpibfeemvG3+DFw3GAOcLlX4DRj2kIIsvDKj/5
      4A8pZW9hDHv84McfMuk16NbLoHiI/KW/jE85Kkra2Njg9dedNpLH4TjAXCGQDiqUiZE/PCQS
      SyDIEh6vl1oxjy0pxBMJQqkV1M8ytdFo1Ln4T8FJgzq8dDhpUAeHKfn/AYPpIx/I5Df2AAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GDP per Capita by ease of Business in Countries' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mobile &amp; Internet Usage over time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      8v8BHSssnJIb7N8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29yXMcWZ6g9/ka7rEviAgsgYUkuOXGLmZnZY00rbHutimZ1CaTDtJZLdOf
      0Rf9DTqOyaynjzrp0GMmk0wzPdVdXVtXZjKT+4YdASD2zcN3dx2CZCZJAEQgsJCEf4eqIusF
      fo+IePHe57/3fk8wDCMkIuKCIgOEYTQGIi4m8sv/8etf/5p0On2efYmIOHNeDYBMJsMvfvGL
      8+xLRMSZI553ByIizpNoAERcaKIBEHGhiQZAxIUmGgARF5poAERcaKIBEHGheZUHcF2XRqNx
      nn2JiDhzXg2AQqFArVY7z75ERJw5QrQZLuIiEzlAxIUmGgARFxr53U0iIt5mMBjQ7XbPuxsT
      Ew2AiGPheR6WZZ13NyYmWgJFXGiiARAxMb5rcfeH7zEsh3t3vmGv2WXQafDHb+9guf6hrw08
      m7t37+L6rz+MDMOQXq9LEASv/f3AMCbqaxgGrDx9ihuEPHnwA9Lf/M3f/G8T/cSIC4llWZim
      CcB33/6Razc/JQwcms0hvdYODcPk5rWrPHz0mJjo8/DBQ2LJNE8f3COUVdYePULLTfHgh++4
      fvMThv0OP9y9jyaJ3H/6GEXLYLS3+b//n39gerrMg/v3SeRKbK0+ZmN9A88LkOMJWs0mku/w
      /d376HGd+3fvoagq9+4/JBGPcf/+A+LpAv6wzXc/PMC3Db65/4wb16/QrHWiGSBicgRBptda
      58HdTQAS8Ti+Y3Ln+7ssXVqm3Tf47NbnPP7n/5fNjkWn28IXNDK6AqJILBbD6HXwOhvcf1Ln
      6p/cZmd7hVZ/wI0bNwmcIUEwYO3pHoKicevWTbrtJnd+848ESopHjx/i+R7VjW0c12Jl/TmS
      KPDg2zsMPY9uv8ezjSo/+/warb7BzZvLKCLUdraiARAxOVcuz7O502fpagXHbCPGs1xavMzP
      f/4VhUwcPIc7397liz//b5lNqWSzeeYXZgG4fmWJb775BuQY8UKFqUTI999+w9LlG8xMV4ir
      4IYSipahXE5Tzqe58/1jrnzyGSgaszmNG9evI0kqU8UcMS3JdLGMIAhcv/UFmiSTSSW5tlTh
      zr2nXFm+RnlqChDIF7JRJjjieHQ6HZrN5pHaWpaJGtMQBeGdbZ2hiahryO9o69kG7WFAMZc6
      Uh8OIpoBIibG9zwc1z2wvI6m6YiCQBD42LaN/4bY/hQ1roPv4QcBYRjgeR5hGGDbzmuvk2MJ
      irnUW5I8LlEeIGJi/vl3vyYuCpSu/Yz+zhql8hS/+933/Plf/hkbmzvcuL6MKAg8fXQPww65
      dPkKW+srLN/4lPWnD5i/cpPt1SfMX7lB2Kvyhyc74PvIdhNTK/NfXknw61WXhOTwxY0bIIS4
      Zp+uKxETAhK6SrXe4drlCo+ernP18hyPn29xeb7Exm6Xm9cu0eu2MS2Pdn2XuUvLtGvbSIl8
      NAAiJicMAlqGyyUsNvt9uuaQhfkFHn//Ld3BgOz0ArPZGBDiOA6O0aU3GHDn29/h2AL+4I9s
      mC59f4W8a3Dr669YuXuHID3Pv751i+HOAxzbIp3RWXmyCrKPKAZIeo6O0UcMfNJKjN9+9y94
      hsWwNyRQYH2riukKhMD9+/f5/IvPef6kRb15Bz2fJTbcjQZAxOTMVJbIqSKtZgdZ0UmkNAaN
      JqXpaQK1T9CvM4zPEo/H6QxczKGNEouT1ERMxSOW0kn4fSqzZaYSAr/73W/Rk1kyKQ0AKZZE
      Vwx0LUbQb9EzBC7P5dnrDsmlU8QUFR1A0KnvdajMltnaWEObKtDd3sMD5haWUEKXUNHJxBJk
      pwrgO5EERxyP8STYIhbTOIIDnznRDBBx6miadt5dOJDoKVDEhSYaABEXmmgARFxoIgeIOBaK
      ohCPx8+7GxMTPQWKuNBES6CIC000ACIuNNEAiLjQRAMg4kITDYCIC81bj0HDMDzyHo+IiA+d
      ffMAz58/Z3Fx8az7EhFx5uw7AOLxOJcvXz7rvkREnDlRJjjioyYMfL75w28xXVhavk5luvja
      tuxIgiM+akLP5p9+/0cKhRy/+09/z3/4h98D4PsehmFEM0DEx08mX+KTTz7lk5s3+ff/x9/i
      /sVX/MN/+L/Y69nRDBBxgRBE0qqCEwrML8zj2GY0ACIuDp4zpG57yEad336/yf/8v/yv0RIo
      4uNn/dF3/Lt/N8DzfH753/9PKLEk3mCLf/+3f/v2dugwDLl37x5ff/31efU3IuLM2HcGGAwG
      PHjw4Kz7EhFx5uw7AwwGg/PqT0TEmRKdCIu40Oy7Ge6bb75BkqTz6E9ExJmyrwPEYrFIgiMu
      BFEe4JTwPO+EflKIZQ7xg2ilehp81HmATr3Kw+ebpHNFNL9NrR8QT2bQvB4dBxKpHJ/duIxl
      miDKxBQZw7RI6BqO6yJKMu6gybcPVqgsLDFdSIMoI0sCtmWjJ0Z3VHVaLeYWFhFCH0QZLaZy
      74fvWb52g3hcI0QkDHxkWcZ1bPxQQJVFDNMmmYhjDg2UmE7ou4SCRExVCHwP03ZRcPmPv/oN
      f/6X/5YnP/wODxU9WeD68gKiAAgiw+EQLabQNWxSuooXgK6pDIcm8fiPP993bQRJIaYqNBoN
      stkMtu2gx+PgWfz+D9+SLs5w4/I8luOhx1QQRILAhzDAdjzU0GSlYXN5rkQQ+BiDPulcHts0
      0eNxbHOIqMSIKR/GR+vD6OUxWd/Y5bNPrrG63cAL4Nbtr3j6/bcYnkkox/E9D3D41X/8FWoq
      Ti6pMzQH5NM5/mWlwf/wy3/D2vomX3/9NYok8PThXZ6s7VHOq8STeWxUcAx2t7dJZAsYrR0e
      rlb57/6bX+JYBuurjwmQMT0FKTC5/bNb/PM//WeGrsy/+uozHj+8j54ts/ZsnS9//jMe3/sB
      T9b4r//i3/DdN39AEgVkLUMoKUgCmKaJKIf4CNy79z3FOOz2RTpDhy8/vcR2vcfeyhMUOU5+
      Ok2/20dP5tje3ubL21/wzb98x2e3/5RLlWk2N7d48uguiZhKYu4GabfF/PVbVKaS/PH3v0Uk
      QBDjlC5fpb72jF63hirFKM3kebQxwOls0TRlphIBrWaNnXoHLRFjZ2WbW1//gsW50nm//Ufi
      o14CpRMyux2Tfq9NGPr0Ok0M1yemJ7l9+0tufXZ91C6XR1Nker0uyHESmsQnn/8JqbhKPqnx
      fKNKp9vi2dNVer0uoqxSLOQIghAQKJZKpFM6T58+o9sb3Z4uKxqFXAYhlkEYVolny0BIu9Ml
      k0rx9NlTXNfFskKWlqZZef6cTrdPKpUGIEAgl0kR05PMz88TUyRiepIbNz/B7LewLYu9WoPc
      9DxJYcjWXguA4nSFmXyWXr9LKKqkM1kuzZV5trrF8pUFVp6vvPr96Mks1y4v4HseqUya7Y01
      mu3Oi9gJAgLarQadnkE6V+TS3AxaJkchk0aO6dz+k8+RRQFz0MPxQlLxDFeuLbGyssKHwkee
      CQ7Z3d5E0jMklJBqrcXC4hKBa6Nq+mgJgcN//v9+zRdf/ZxsQmFto8p8ZRY3lIjHRhPkXnUT
      NZnHGbSQtDQ764+IZ2e4tDSPbVmIoUfbcBG9IcSSlPJZjF6betdksVLmN//4G37+X/0ZigD9
      TpOu6VPM6NTaA6byORq1XfLlWZxBGztUmC7mcSyDvVafynRxtBzRYnRbNWqtPvMLi1j9FrYv
      kEmn2NndY74yh+v7EAQIISgxmc2NLabnKjR2t8kVZ+i3amjpAtlU/NUVpzFFwgkENFWh26xh
      BjL5pEqtbTA3PcXm1ja5fAFZEpFFEWSF5m6VeDZPQtdxHRNV1djaWKcwPUuvsUsiVyadeH8r
      Qv+UfQfADz/8wJdffnlefYqIODP2dQBVVbl79+5Z9yUi4szZNxP8MRQ9jYg4Ch+1BEdEvIto
      AERcaKIBEHGhiQZAxIVm392g/X7/PPpyLniex9///d/j+/55d+W94K/+6q/Qdf2tvw/D0bMS
      YYy7ToMgQBSP/h0bBAGCIBw5xkn06cCnQGEYUqvXKZdOJqXtew5raxuUZ+YQBEjE3/4lnweG
      YfDlX/6PzHz+F+fdlXOn+uj3/MP/+b8zOzv71v/n+z6CIIz1gfY8D1k++m4bz/OQJGmsARAE
      wVhb99/s04G9C1ybtc3tExsAreoGaGkkIWBgmmyurRJLZlGxaRku86Usu40u+UyCZrvLzOwM
      O9tViqUyjWaDfC5Hq9Vm6coymnKyZxXUeIp0cf5Ef+aHSGvryXl34cw5cDhLqkYunTixQPnZ
      RZKiyfr6Ft1eHy2VRwwcLDdEEUN63S7t2hbNnstCpcTKs6eUF67Q3httZWjsbuF7HrZ7UtuM
      IyIOmQEcc4Bt2ezUmsyUChMHcqwh3YHNbGWOMAwQRBkhSFDb2aBa63Hr2iLFmXlCz2Jzz+fT
      zz9nc22d6cVlQkFGyWts7jTR1ZPfwOq7DrbRO/Gf+6HhO9Z5d+HM2XcvUBAEZ9aBfrdNIKpk
      UqPZxnUcZFXl6FozGZZl8Xd/93djHWAJw3As8Rq3/XE4qRh//dd/TSLx9sw/rqDCyBvGWZ/7
      vo8oiqfqAG/26UAJDnyPjfU18uXKiezsc+0hnhDDs4ekUqkD23mujR+IWLZJJp0+sN2w36Fa
      67B0aZFWbY+p8jTb689BSVCZnUYQIPBd1tc3yBdK6Ik4qixgGBaJxI9bPQzDYKfZB2GcJ8Kj
      bdCn1/7dr1mYzqP+5NDJuML58kvuqFJ78STY95gqldmu7pC+eunIAQ7C6jXYtXTsbo1iLkXb
      cMgkNTrdHjMzs+xUt8kUZ0mrHqure5QX5nn25BFqIodntnGIMZVU2Wm0uXr9E9bX1ynOLoJv
      s7m+hpTIMnQDtKCH5ZXQFZGN1RWKlUu47Rr3N9eYnZ5DCILXBgCA7XoIYw2A8ycIoyOSJ8HB
      73rgsbG1y5UrSycWbDg0cFyPrmGR12Gv57JYKbG1skllcZ7eYAiEWLZNYA8Q9CyW0UFUdDRF
      pGdYFFIxbC/kytXrtKrrrDxfIVRibG9t02nssF030OTRN0gQgiyJiILE4uWrWEaLbida60f8
      yMESbNsIBLTaPUqFzMSBYsk8y2kNz8wS+g6tgcPluQxKTKGyMM3DH34gPXOFmJ7is1ufYw4H
      eE4HtVBGV0dTXL9d48nKFn86fYV+t42gp8nnsizncvS6HZgpIAshm5ublGYrLC4tsrq6QmGq
      RFyVUfJFAl94leh7uRSTRRHGmNpPfQX08sv9kNcIZ2ZJHzfnLsEwWqs3mh0KU1NI4sFvrDUc
      MLQDcrn0ib39lmWhKMpEInXS7cMwJAzDsdbb48YY1wEunAT7rs3q2gbluQVS8diRAxyEa/Xp
      2SKqGBwowe3GLnv1NpVLyyQ15dXfe46FE4jENfWt1wwNAz2ROPaAMAyDarM/ngOEIYzzxGXc
      9qMXcZRpIxmPMV3IRBJ8zD4d3DtBJJdLUa3ucn158hsjHaPLk40B+aRIyTbYa/bJZDOEzgAt
      kUOOxckVynS6A9xhj0drDWZmylSrO0zlUtho7PSbJHMF2rt7xNJZVBy2dtv86c9vM0lu2PkA
      JfglnvdRF/Y4dQ551wU81wdOaDkkCMwWM+zUO6yvreN7NuagT8ewefb0Gaqm0q7vkMxPs7u9
      ged5NOoN7GGXvVYfxxpimA7b1Q30ZAEx8LBcn+mp3Mn0L+JCcuDXh+9adPsGxfLciQRS41lK
      KR0Rn0xCo9YeMDdbpGd45DImmiTQMC2M9oDy3MLICQpZQiCXL6AoMqHnksqm0WMJwMccdBnY
      k+/pliVxvDzA+acBXjHOkiTibd4LCT5PIgm+2BL81gwgCMIrSe13GoRqmnT8bfkcF8ccEMhx
      XNMglR79fMswkGIxJFFC/MnTH2toIGsJrF6TvfaAhfk5JElCfPGLGVeuDkMURaqNPsIhT5/e
      5D1y4OPHePG1pygyizPv3ut14SQ49F22NldQs1dPZAAYnRpucp7uzi6dZo2+5VPKZ2mtP8SU
      y5TjAQNXIBUT2Nrc5uaXv2B9Y5Pp+UusPPgWNzFLIeZj+gI76yss3/yMQadFPJ2h22pSnlsi
      lz5eNQvH+3AleFIuej75wHe9tVfF9kKa7fbJBJIkPNclCEMCQaagx2h3uiSzeWZny6ytr2Nb
      Nj3TYW56dAZh+do1alurCFqauZky3U6Xza0qxekZMmrITqOLZdnIkoRhRLfaRIzPgTNAYXaR
      XKnMwDqZlFN6ao7mygqF8jQxWUACND9A0xWqe3WWl5cxXIG0JtDqmkyJ0Om0UZM55qan2G3U
      SaVSaJkpcgmZniczX86RSKYY+A7JZPLYfZPHmHbhvXLgiWLAiwcAF5hIgiMJPnL7CyXBYeDw
      5PEKU7MVCpnjf7u+xDX7PFvfobKwOFZm2RwYqMnERImuw3gvJTh88Y1+ijFebiY96DXlQoZU
      /Mdt8BdOgp1ujZbpM6dOLsAA1qBDujTH1sYauZRO3w7RRZ/e0KGQS1FvNhFEmenZCu1alXRu
      ilajgSzIJPJJ8vkSMfl0puuLLMEHEVyQG2kOPhOcLPHV58usr66dYDgBUYT1tTVs28ZDopTW
      6Bge08Us+UKRdqvB0LTZ3tpE0lJoks/mTgNFinY/Rpw8Bz8GDTzW1reYX1w4kUBaMsPm+haV
      +QWmMin6jsBUNoksguwLaAoESCT0GPUwJJ3JoOkJpCBNXgTL8YjHlHcHOgbjSvBFQLwgv49I
      giMJPnL7iyXBYcD2xhqpwgyZ5ORFrDx7iCeoWOaQbObgs74vCTyHZ89XyBZnKOUnP5BzEC8l
      ePxU7eTMl/No+8xqJyF37yLaDj3iwN71dtapdkyWsydTMtAetHi41eXS4jyPHz4gmSvh9Oto
      yRzdbpvS9CyN3Sr5mQWmMglC10RKZGnXd8Hq0Rl6JGLQG9hcuXoN9QSF+Lwk+GVpv4jz48B3
      3fd9ZucXqe/unFCoEN8PsAYd9Mw0g16bQJDx+02GbkCnVce0LarV+qtXrD+5jytorK2v4zo2
      li9QyiboD50T6lPERefAGSBXuURvZYXpucqJBIol83zx2SzmoEu/26Y4PYsqBuiqgrm+SaFQ
      JAwFEnGVvUaXYlbnT7/+L/AsgzC3TN/0R4fahSxz2QDL9U+sROJ5SXAk3ufPByXBruuiKCf7
      JCiS4EiCX+OlBJuDLhvbu6SyU8yWJy+N6Jp9OrZATAxIH1Lw6qwRRZHtRi9KhF0AJFFkYTp3
      NAnWkxkWpl0a1sl8MJxhl2cvzgTbwx71tkF5KkOzb5NO6PS6HfK5HAQujZ5FNp0grogoqQK6
      crofTtfzEYRISD92fPHtlc3Bn6wwZKvWplI+oTO3gsBsKUu11qbdHTKT19ndbVKeq9Br7mKb
      JjvNLp1Oh9rmFkHgsLrbRjvlD3/ExebgTDAhpXL5xOrvxBKjM8EyPpmkzl5rwOXLC8iKRLE8
      TUxPYZgWuENENUk6rjEwz6b8kyJJYxbGOuXdcO/aqXYeMc6qT2O1f/EfR3zNfjWn3lsJtswh
      Skw/tFDWicSJJPjI7S+UBAeew8rqGuW58bYvH4Rr9mmZIYWkTL01ZGZ6CoBer7evFKdSKQaG
      QXKfUt0nyXEkWFMV5qezR24/bkY0ygS/B5ngQWMHX9GpVne4vrx05AAH4Zhd1raG+FmJ5iDA
      t3p4kj66iGPYpzlwyKbiaLJAdzAkEFT0mEjomGztNrhy7TrqKe0IHVeC5TF+4RHvNwcOZ8cL
      UWUJwpNaDgnEFYGODZro0+712draAkZHH3c2t0a3w9S7xFWZ4dCg2+vR7rTpNPfom+4J9SMi
      4kcOzgSXp+msbTI9c0KZ4ESWy4s5LNtDEUM67Sb5YpJkXMMe9pC1LMm4guEpKKpMMimRTcfB
      s3FDmUTs9L51FVkaawl00c/Rfky8VxJsmUPUmP5ajaBTjxlJ8JHbXzAJtlld3WBm4RLx2ORF
      qMIgYGtzDVnPHHjp3suCXGchvy/ZT4Jni1kS+sHifxy5iyT4aO3fGwmubmxSrFRYXVnh05vX
      jhzgIFo760iJPKoIe9VNOoZHJi7R7pvkMmlM10f0THp2SDGfxreHVPdaLF+/hnLKM8KbEhxd
      P3RxOHA4T8/NUF1bJZi49OzrbG5usba2iuc4tAyLqZTCbr3HbKWMFyjIgk+v16PTbtNuVDGs
      889JRHy8HDgDCIKILKtcWrp8IoHyM4tsrq9Smp4mLhXpDH0K6RiNrsnVyyUUUcGz2ux1HW5/
      fpPANfFFFV09fR94U4IvynnYiPdMgoeDPsgqcW3yxNtRiSQ4kuDXeO1M8PYOlblZdrY3UBJ5
      pnIH3+97FHar20zNzCG/8e97uc//p1cnWUaPQFQRRWnfc7MnhSiKbNd70V6gE2q/XCm+GlQf
      tAQHnsNeo8nsdI6hLREMdycaAGHg0tirEqgpRM8ABHx7iC9pbDx/zLWbn9JoNClO5ak326QT
      CpKWJabIbK5VyZYqFCccgAfh+j7CBSkEddp8aL/FAweApGikEhoIo52hk/7D+s1dDF/G3amS
      iAl4vk8+naJrDClNz1JIaxhuHtPo0WvtgVAiJZgM+w6GZWJs105tAERcXA4ujWgOcB2XvaZJ
      UgtREjMTBRJiGb76cp5Bv4c56DD0ZVRVJC3GSKnQMjxK+Sy+JeKhkM/nUGSFIPARBMjmihPF
      P4xxM8ERB/OhPT54ryT4PIgkOJLg1/ipBG9tV5mfm6NVrxLLTE+0H8ce9gmUBM6wTyYzKnRl
      GQaiqiJJ8mv7/i2jj6ynsIZ9FBGGbkgykUTZpxZQfzAgNcHdAKIoslXvfbAVGlIJjZmpbJQJ
      PmafDpXgWrNFZW4Ou9dgqBYnGgDDbh03qdHdrdFp1hiYAcV8hnZ7C0suU9R9Bg6kNZHtrSo3
      v/wFuzvb2E7I7HSeTsemtlejUJym26whaQnkwKLWNVkoZWkNbPJJnVq7jSyKlBeuUEgdraKd
      5/sf7BLI9y/ObH0aHFwdWtFIxTUEQSBzhFKG70KSZVzHwQ8DEFWmEhrdXp9UNs/sTJn19XVc
      x6VvOsyWR+t9QRAgDBgafQzLZm5xge7OLolCGcfu4YUxCtkkPcMml1Bo92yK+SzT5WJUPCvi
      SLxTgndqdYZtk0CtQfb4W6NThTlaa6uUZuZQJQGJED0I0DSFnb0G169fZ+BARhdp9SyKIpRn
      5ojJIt3BkIweR1UU5pbmefjoHmI8TyEt4pAkm5dp9i0WFjKIooAoiajB0WcrVZbPpTboSRAd
      zpmMD06CwzBk0O+hxZMo8uRvfiTBkQS/xmsSvFWlUpmjurmGEEtPVCDLNXs8XasyMzODpifQ
      YzIQ0u32911iuY6JHypo+2zFPsnCWh+6BB+FciHzVoXvSIJHHC7BrRaVyhz5qSKra9sTDQBr
      0MGX44ihS7/X5flelWyhiNkfYPRamL6E5FsYdsB0KcPm5jZzSzf3HQAnzYcswUfholx3dBze
      KcEQsrG+weXlKxMHU1SVwLMwDIup8jy+MwQC2u0uW1ubCJJKIa5R6w5Ymp/94JIqER8eh0uw
      O5JgQtir1VmsHD8brKUKLGQ01NBB0UMkWSaIywR+SL/bIlOcJpdKIgIpPHZrLeYqp5f9/Smq
      LH/U9wSfdm2lD5kPToJPmkiCIwl+jZ9K8ObWNvOVChurz1CSeWYPOMt7FDzXwnIEkokf9/p7
      jontiST2KbzV7/df2x59WhxHgs/qFvdx+GmMcj5NJhU/tH0kwSMOleBGq8N8pUIqnaZaa040
      AFyrT7Pts7XeJD9VpNlsks0k8Yizs71KMp2nWa+hp7IogcVWo8e/+ur2seONw8cmwdGZ5qNz
      cHHcEFxrSK9vYA2HON7khansYQ85nmPQqlNvtknENfzAYHe3TsKwyBVmEHwTy/bInMG3f0TE
      Ww4AEI/H8T2XgTFEUWOEvoukamjq8U9mhUFAEIJtmagxDdMcosfjCIBpmsRiMQRRhBAC38EL
      BOK6Nsm/7UgYhkHHsMeaAcIwHG/JNGb7SWNkkzrxQ8q6QLQEekkkwZZFiDjWGxsEwam2h/DF
      B/r0YoRhALwttYIAqvL2h/bCSXDgOdy5/5jbtz7H6NTYajlcv3z8vUDDbpO1ap3puXny6f2L
      XjXqdaaKZ/Po8yWiKLK22/6oHGASVEVief7tS1E+1hng4LIookRcjxEGHtV6F2HC+kC+5+L6
      AYHVY7VVoztwyOgS1e0t4rkyMcFj6IbUdzbYbdvMTmexTZvLn9wiqUYfzojT4eB7gj2XTrtF
      u9XCdV22d2oTBZJUnXxap9k12d6sook2kqohqTrFXApfkIgpMo7rMzc7jaLFWZgr4noXZzkW
      cfYcKMGB59I3hqgxDT2m4vn+WNPZmwSBj2EMSSSSeJ6LKAiIkoxjmwiSAr5LKMrIItiujxZT
      RzuUBfFUC1W9lGBxnPV2GI7Vp3Hbj27+GU+Cx48xyhy8+QpJEinl395s+LEugSIJfiXBY3zY
      TlmCQ0bvw1iD7JAYoii+tXU8ygSPOLQ69J37T7j9xac8vH+PVGGGyszxBdUxe/QtiULuRwHu
      NqoomVni+zxdrdcbFItTx453VC6CBGeSOvk3SspEj0FHHCLB8kiCwxA/8LEs68hB9sP3bHpt
      h5XnD8kkdTa391islEmLcf5w5xsWrlym2+yRymQwhz28UD6TARBxsTlUgtutJp1+j0ymgDHo
      Tx4tDJmdX4TAZ2ZuDlUWaNcbpDNp+oMhlcVLiJ6NIKknctorIuJdHCzBvsvAMFHUGAQekqqN
      7gw7JqNM8Kh+pUDI0LTQtRggYNk2MVVFFEXCMMR1bERJQZ0g83xUXknwOGv0IEQYwxnGbU84
      ktSxMsGHxNBjKtk3NsdFS6ARkQRbFiHjvbGnLsHhCwk+RTEPX2yYe/mhfteMezEl+N5jfvb5
      DZ49W8X0Qr749MaRA72J55g8ebZKaabCVO7gM72DTh0xUdxXjE+DiyDB7yKbimGdTzUAAAwv
      SURBVL8lyW/ysc4Ah0twXEOQVC4tzrJZM44cZD8a25vMLd8gJfn84Te/IjU1x7DfQ0uk0QWT
      rZbNYilNs9Vkej7kt/d+4PYv/oxc8uzuCoi4eBwiwQ7tZpN2t8/G1i7zlfJEgZKZFFurq9Rr
      O6AkMY0+hdIsSU2m1zcJAw/H89G1GI1Gk2wqgWHaE8WMiHgXh0iwhzEcSbAsi8jShNUZwhDL
      MpFkFdd1UFX1xbIjxHMdQlFCEQVs10NVFBzXJRaLIY21i3J8DMOga9ijrdhH5EOT4H3bhy9O
      kAkQ11QyycNPkH2sS6BIgl9I8H4DQBZF5H3kMDoTfDp9eu8k+Lt7j7n9xSc8evgQJZ5l+dL8
      kQO9Sae5x+Nn61QW5kgmCmTSPx52GRgG/W6Pmdl9qk4ENrW2RamQOXbswzhMgguZJLl9TqZF
      9wSfTp/eMwlWSLyoCzQcmihM9lgmWyiTa/bIp1TuP3xEbqpAv7lNoOVIxxVC12d38zl3H28z
      v1DCMU0K+SLtbhM1WT61ARBxsTlYgl2bVrNBs9VAkHQC3zuxkAtLlxHdIU4g4tomvu8D0Gz3
      SKgQyDqL8zMMjSFaPP6h1q2N+AA4VIKHpoWsqAihjygpKPsclRuH0RpPeJXocR0HSVFe7XoM
      Ah/fD5EV+dXf2baFqmpI0unI8EiCnX0dIKnHRvekvUG0BDqdPkUSfA5YlkWAMOZ5gOBU2x/r
      TPBPYkjS0TK7EEnwwRLs2nx3/zG3v7jJ44dPiKWyXFqYO3KgN/Eck6fPVklkCizMTZZTOEk+
      xkxwOqlTeUdmN5oBRhwswdJIggPXxPIl+rXaRAOgsb1FqTJPp9nh3re/Z7fjUpnJkEik2a03
      8RybZDpPRgt4stVmcTqDadpoyQy5lI6g55hKH+3Ko4iIo3LgAPBdm2ajTqlUJhsX6CvHv4gO
      RpngteouvuMCAosLFRQF5meK+HIc12ihKhqddh1VAElLsJDP4Mkpnjx+yi++np0ofkTEfhwq
      waZlIysKoe+jTJqVDUNs20aQZCQhxPUCFEVGEkX8kRUDEPgeAQLyi6nQHHRo9BwWK9PHj30I
      LyV4rN2dp+wA4SgVPOaZ4B9jaDHlre3Pb7WPlkBAJMFjSbAoCqiKHGWCT6lP75UEu5bB87VN
      Euk8ZreOksxxaf74yxCrV2Ot6bM4pbC6M+CTa0v7tAoxjCGO65JO6LiBiBY73X3R40iwHlO4
      lM9Fj0FPqU/vlQTLsTiFTALTN1D1EoEz2ZFI33Pp9g1qiEjA/e/+hV6gUcrGR2VAPBM1lcfu
      99mqbnN9+QqOG6KmspidKjs7DW7euk0hM5mLRET8lAOHs9Gs8rzaJpXM0utUMV1/4mC5hELX
      BjFwMNwQPJeh0WOv0ULRkizMlkGQmSrkR7eaCFDbrTIwPUrFHLV6c+I+RET8lEMl2LKdV5lg
      QVKQJ8jGhkHwqt4NjGYEQZIhCAgQUGQJURTw/YAw8AkFEUkUcRwHWVHwXRdZVU98e7RhGHSH
      zpEcQFEkCplktAQ6pT5FEnwOWJZFEJ7smeCXsvySSIKP3v69lGC3s0164XOmksffC2T16jza
      aDJfmaOQTRH6Dt2hQzb1+po+9D2GjkfiDO4GgNPJBMc1laX8jxWWoxng6O3fOwm2BZFSIUNn
      wiK1vmNiewG+M+Qff3WHq1fmeby+R6WYZWhapJMxOgOXbDZNKCk0Np6h5ma5dXN5orgREYdx
      iARv86zaJqGr1Go16vXGhKEENE1HUVXyaZ2hK5JOxgmCAFWR8AOBS5cv4/s+ttEnVBO4tjlh
      zIiIwzlUgm3HRZYVfM8FUUSLHb9CQxj4L6RaIfA8lFgMz3GQZRnX80drZkEYrX8Bz3WRZBl5
      jOntOBiGQW+4/3bog3jX+VtVlslnfqyBGi2Bjt4+kuAz5qUEn+Yh98PaCwhvJfsiCX6vJDiH
      a7TxRI1rV5aOHOhNBp066ztNZg64IqlWq5OMx9GSCXBN7j5e59ZnrxfiatVqpEslBNfGCUT0
      E8gSn/d2aEEQuDmVf+3vohngPZHgfCaBK0iUikV2WoMjB9mXIMDzfCQh5Lf/9J9I5WeJJdMI
      rkngDGkMXGbyGeaXr9Cu1VBlkU67zZOVNeaKGe4+fMby4iLbtR0S8SRaMst3j74nM3OFT68u
      Tta3iAvL4RK83UKPidz54QHJ5P4X2x0VQVZJxVXWV58jaVlcx6Lb3KPT6+P5Iaoiv/pWqjVb
      4Jns7jWYX1qi3+uTTek4PiiKTBgEDPsd1EQB15pwYEZcaA6RYB/nhYj6nocgSsQmvCfYdlzU
      mIrnOEiygu97iKKEQIAfCsiSiCCKhEGAKAj4QfDiz6OzwpIk4nk+qiqPLvJ2PWRZGmsKfJPT
      kOBx2guCQPmNK4miJVAkwWeGZVn4oTBmJeZxKzeP154XRQPGGWTviqHI8mtbWSIJHnGIBA94
      vrZ1YhIMsLm+zuziIu/T1RfnLcFnxWxRJ/WTQzLRDDDiEAlOkE/HcUWJRFxjtz15odpBf0Bz
      d5NvvrvHtcvLDH2LbK7E+qMfyJXnGVomyVSGm1cvTxwrIuIoHCzBjVEmWNckTDvA85yJAvW7
      LQzXo9NqU8wlGdo+sqJg9dvEMlM4wyHTcwvo6vs0P0R87BwswYGP8yITHAQeojRZVtb3PcJQ
      QBTADwK6tTpacYqEouC67oupb1QtepxpdlJeSvB4u0FP1wGOd03q4THSCR1dU3/SPloCQSTB
      LyT46B8E2H87tKaqB5ZwjLZDH739eyjBebJawFbL4ebywpEDvYnZrTOUMhSSo28hxxzgoJLU
      R382jAGJxNkfdzwpCb55KX/gGxftBTp6+/dOgh0hZLc5QGKyCrWeY2HLSfrNXX79+29ZmJ9l
      4OsUUjIS4IUBaU3im7vP+Itf/hItUoGIM+AQCd7i6XaLmCzg+y7bO7UJQwVsb26yuVtjupRH
      jafRVAVd8hiGCoQBrXaPQiaGc1KFqCMi3sGhEuy63mhLsigSjLkmfZMwDHCcUeY2CIJXGWZZ
      lghDgRfZH/wwRJbkMyuJfiwJ3kdQS/l0tASasE+RBJ8DryR4wkpvqiofeGA/kuCjt3//JDiV
      o9fcIVOcozJTPHKgN3kpwUnJwfMDQjmO0WtRLpUOedWoUFYiMdlGvMM4KQlenEmS0Pc/MBTN
      AEdv/15JcC4dxxNFBFFgOBweOci+gV9IsFvfoWOZ9P0kut9lc3OHVCZOOa3R9xQe3PmG5Zuf
      0u10SGUyCH6I2a/RdWP8669/NlEfIiLe5FAJfrbdQotJaLEEw+FkF2VDwNbmBqbjkStMEVMk
      ktk804Usge+wvlmlVW9Qmi5jmjaVpcuoUkAY2JiuiCxcnGVZxNlxoASHQYD7YkoKwwBRlCaW
      YNf1kCT5RQGsF+s9RpnPl8klPwiQXqwDXxbRGq0/xVO5JskwDPqmO9YSKAyDt9rn0vHXagH9
      lGgJdPT2kQSfMZZl4QeMeR4gONX2oyuSxiuP/jKGqkhH2rISSfCId0pwPJXDG7aJpaaYm546
      cqA3GbR28fQiRnOXucrophnLMPACFymWRld/fCO6jT1iuTKKP+Tu43X+5PObr/2s1t4e6XIZ
      GWjvbVJtDanML5BJ/niDzMAwSL4mzz6tVp98Pvvaz/rYtkPPTGVIpd790CCaAUYcLsEpHQeT
      nZ0OBVSYYAC49hBXCRgaQx7e/R7TCshmU9huB0cu4TZWaJgSy/NTdNtdbn5ZplmroakSzXqN
      la1dZvMJvrv/lOuXL7Fd22Fq7gqibeKH4PRb/PHZDvYwJDeVRxFDrH6HqZkKj+7doTCzSGO3
      zuL8FI8eP2duYQEnkPnk6tKx/00RHz4HDufBi0ywrmeIJxQcZ7Lt0Fo8SXXtKXYA8VSWuWIe
      PwjJF4rIkoiqJbh6ZQnf91+N0HqzReia7Ow2Wbx0iX6/TzGXxPXD0TcFAggCsqxACPNLS5QK
      ZeIxmSAMSeeK6KJPpjiDIIhkUjphKHBp+SqzMzPYgw6Of3GWexFvc6gEe77/4sxuCGNOf28R
      hqNpVJReZXlHV4GOzv6KAgQhiIJAEIZI4gv5fvHnkRQHP7YJAiRJhnDUz5dT52jt/OPPhpdr
      S4kwHP33y7VmEITYtjWS4PfJAcIXDjDWueNRjHRce23b80FES6AR/z8Njs0zuxVpRgAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tax Rate, Ease Of Busines, Hours To do Tax by countries' width='192'>
      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
      ldOnD/2M/h+wPYSI7o6KNwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tourism Inbound in Years by Region' width='192'>
      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
      /wGcNHtoey8N3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tree Map of Tourism Inbound &amp; Outbound' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map by Population and Birth Rate Segment' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
